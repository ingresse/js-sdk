[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "src/apis/api.auth.js",
    "content": "import {RequestHandler} from '../request/handler';\n\n/**\n * Ingresse Auth API\n */\nexport class ApiAuth extends RequestHandler {\n    /**\n     * Login User\n     *\n     * @param {object} data    - The user data to login.\n     * @param {object} [query] - Optional request parameters.\n     * @returns {Promise}\n     */\n    login(data, query = {}) {\n        return this.post('/login', data, query);\n    }\n    /**\n     * Login User by Company\n     *\n     * @param {object} data    - The user data to login.\n     * @param {object} [query] - Optional request parameters.\n     * @returns {Promise}\n     */\n    companyLogin(data, query = {}) {\n        return this.post('/company-login', data, query);\n    }\n\n    /**\n     * Login User with Facebook\n     *\n     * @param {object} data    - The user data to login.\n     * @param {object} [query] - Optional request parameters.\n     * @returns {Promise}\n     */\n    fbLogin(data, query = {}) {\n        return this.post('/login/facebook', data, query);\n    }\n\n    /**\n     * Register a new user.\n     *\n     * @param {object} [data]  - The form with user data for post.\n     * @param {object} [query] - Optional request parameters.\n     *\n     * @returns {Promise}\n     */\n    register(data = {}, query = {}) {\n        return this.post('/user', data, query);\n    }\n}\n",
    "static": true,
    "longname": "src/apis/api.auth.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "class",
    "name": "ApiAuth",
    "memberof": "src/apis/api.auth.js",
    "static": true,
    "longname": "src/apis/api.auth.js~ApiAuth",
    "access": null,
    "export": true,
    "importPath": "ingresse-sdk/src/apis/api.auth.js",
    "importStyle": "{ApiAuth}",
    "description": "Ingresse Auth API",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "src/request/handler.js~RequestHandler"
    ]
  },
  {
    "__docId__": 2,
    "kind": "method",
    "name": "login",
    "memberof": "src/apis/api.auth.js~ApiAuth",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.auth.js~ApiAuth#login",
    "access": null,
    "description": "Login User",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The user data to login."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3,
    "kind": "method",
    "name": "companyLogin",
    "memberof": "src/apis/api.auth.js~ApiAuth",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.auth.js~ApiAuth#companyLogin",
    "access": null,
    "description": "Login User by Company",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The user data to login."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4,
    "kind": "method",
    "name": "fbLogin",
    "memberof": "src/apis/api.auth.js~ApiAuth",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.auth.js~ApiAuth#fbLogin",
    "access": null,
    "description": "Login User with Facebook",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The user data to login."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 5,
    "kind": "method",
    "name": "register",
    "memberof": "src/apis/api.auth.js~ApiAuth",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.auth.js~ApiAuth#register",
    "access": null,
    "description": "Register a new user.",
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "data",
        "description": "The form with user data for post."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 6,
    "kind": "file",
    "name": "src/apis/api.event.js",
    "content": "import {RequestHandler} from '../request/handler';\n\n/**\n * Ingresse Event API\n */\nexport class ApiEvents extends RequestHandler {\n    /**\n     * Identify event\n     *\n     * @param {string} link       - Link/Slug or id.\n     * @param {string} fields     - Event fields to get.\n     * @param {object} [queryOpt] - Optional request parameters.\n     * @returns {Promise}\n     */\n    identifyEvent(link, fields, queryOpt) {\n        let query = queryOpt || {\n            link  : link,\n            fields: fields,\n            method: 'identify',\n        };\n\n        return this.get('/event', query);\n    }\n\n    /**\n     * Get event\n     *\n     * @param {string|number} id - The event ID to get.\n     * @param {object} [query]   - Optional request parameters.\n     * @returns {Promise}\n     */\n    getEvent(id, query = {}) {\n        return this.get(`/event/${id}`, query);\n    }\n\n    /**\n     * Get event tickets\n     *\n     * @param {string|number} id - The event ID to get.\n     * @param {object} [query]   - Optional request parameters.\n     * @returns {Promise}\n     */\n    getEventTickets(id, query = {}) {\n        return this.get(`/event/${id}/tickets`, query);\n    }\n\n    /**\n     * Get event session tickets\n     *\n     * @param {string|number} id        - The event ID to get.\n     * @param {string|number} sessionId - The event session ID to get.\n     * @param {object} [query]          - Optional request parameters.\n     * @returns {Promise}\n     */\n    getEventSessionTickets(id, sessionId, query = {}) {\n        return this.get(`/event/${id}/session/${sessionId}/tickets`, query);\n    }\n\n    /**\n     * Get event crew\n     *\n     * @param {string|number} id - The event ID to get.\n     * @param {object} [query]   - Optional request parameters.\n     * @returns {Promise}\n     */\n    getEventCrew(id, query = {}) {\n        return this.get(`/event/${id}/crew`, query);\n    }\n\n    /**\n     * Get event attributes\n     *\n     * @param {string|number} id - The event ID to get.\n     * @param {object} [query]   - Optional request parameters.\n     * @returns {Promise}\n     */\n    getEventAttributes(id, query = {}) {\n        return this.get(`/event/${id}/attributes`, query);\n    }\n\n    /**\n     * Featured events\n     *\n     * @param {string|number} id - The event ID to get.\n     * @param {object} [query]   - Optional request parameters.\n     * @returns {Promise}\n     */\n    getFeatured(id, query = {}) {\n        return this.get(`/featured/${id}`, query);\n    }\n\n    /**\n     * Get the events type\n     *\n     * @returns {Promise}\n     */\n    getEventTypes() {\n        return this.get('/home/sections');\n    }\n\n    /**\n     * Get the search event categorie.\n     *\n     * @param {string} category - The search category to get.\n     * @param {object} [query]   - Optional request parameters.\n     * @returns {Promise}\n     */\n    getEventCategories(category, query = {}) {\n        return this.get(`/${category}`, query);\n    }\n}\n\n",
    "static": true,
    "longname": "src/apis/api.event.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 7,
    "kind": "class",
    "name": "ApiEvents",
    "memberof": "src/apis/api.event.js",
    "static": true,
    "longname": "src/apis/api.event.js~ApiEvents",
    "access": null,
    "export": true,
    "importPath": "ingresse-sdk/src/apis/api.event.js",
    "importStyle": "{ApiEvents}",
    "description": "Ingresse Event API",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "src/request/handler.js~RequestHandler"
    ]
  },
  {
    "__docId__": 8,
    "kind": "method",
    "name": "identifyEvent",
    "memberof": "src/apis/api.event.js~ApiEvents",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.event.js~ApiEvents#identifyEvent",
    "access": null,
    "description": "Identify event",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "link",
        "description": "Link/Slug or id."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fields",
        "description": "Event fields to get."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "queryOpt",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 9,
    "kind": "method",
    "name": "getEvent",
    "memberof": "src/apis/api.event.js~ApiEvents",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.event.js~ApiEvents#getEvent",
    "access": null,
    "description": "Get event",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The event ID to get."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 10,
    "kind": "method",
    "name": "getEventTickets",
    "memberof": "src/apis/api.event.js~ApiEvents",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.event.js~ApiEvents#getEventTickets",
    "access": null,
    "description": "Get event tickets",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The event ID to get."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 11,
    "kind": "method",
    "name": "getEventSessionTickets",
    "memberof": "src/apis/api.event.js~ApiEvents",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.event.js~ApiEvents#getEventSessionTickets",
    "access": null,
    "description": "Get event session tickets",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The event ID to get."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "sessionId",
        "description": "The event session ID to get."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 12,
    "kind": "method",
    "name": "getEventCrew",
    "memberof": "src/apis/api.event.js~ApiEvents",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.event.js~ApiEvents#getEventCrew",
    "access": null,
    "description": "Get event crew",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The event ID to get."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 13,
    "kind": "method",
    "name": "getEventAttributes",
    "memberof": "src/apis/api.event.js~ApiEvents",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.event.js~ApiEvents#getEventAttributes",
    "access": null,
    "description": "Get event attributes",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The event ID to get."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 14,
    "kind": "method",
    "name": "getFeatured",
    "memberof": "src/apis/api.event.js~ApiEvents",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.event.js~ApiEvents#getFeatured",
    "access": null,
    "description": "Featured events",
    "lineNumber": 88,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The event ID to get."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 15,
    "kind": "method",
    "name": "getEventTypes",
    "memberof": "src/apis/api.event.js~ApiEvents",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.event.js~ApiEvents#getEventTypes",
    "access": null,
    "description": "Get the events type",
    "lineNumber": 97,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 16,
    "kind": "method",
    "name": "getEventCategories",
    "memberof": "src/apis/api.event.js~ApiEvents",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.event.js~ApiEvents#getEventCategories",
    "access": null,
    "description": "Get the search event categorie.",
    "lineNumber": 108,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "category",
        "description": "The search category to get."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 17,
    "kind": "file",
    "name": "src/apis/api.js",
    "content": "import {RequestHandler} from '../request/handler';\nimport {ApiEvents} from './api.event.js';\nimport {ApiUser} from './api.user.js';\nimport {ApiTicketTransfer} from './api.ticket.js';\nimport {ApiAuth} from './api.auth.js';\nimport {ApiRecover} from './api.recover.js';\nimport {ApiTransactions} from './api.transactions.js';\nimport {auth} from '../auth';\nimport {Mixin} from '../helper/mixin.js';\n\n/**\n * Ingresse API\n *\n * @example\n * var Sdk = require('ingresse-sdk');\n * var ingresse = new Sdk();\n *\n * // You will have access to this API\n * // after instantiate the Sdk.\n * var api = ingresse.api;\n */\nexport class Api extends Mixin.inherit(\n    ApiAuth,\n    ApiEvents,\n    ApiRecover,\n    ApiTicketTransfer,\n    ApiUser,\n    ApiTransactions,\n    RequestHandler\n) {\n    /**\n     * Ingresse Api\n     *\n     * @param {object} [custom={}] - Initialize Api settings.\n     */\n    constructor(custom = {}) {\n        let settings = {\n            url : 'https://api.ingresse.com',\n            auth: auth.Ingresse.type(),\n        };\n\n        Object.assign(settings, custom);\n        super(settings);\n\n        this.settings = settings;\n    }\n}\n\n",
    "static": true,
    "longname": "src/apis/api.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 18,
    "kind": "class",
    "name": "Api",
    "memberof": "src/apis/api.js",
    "static": true,
    "longname": "src/apis/api.js~Api",
    "access": null,
    "export": true,
    "importPath": "ingresse-sdk/src/apis/api.js",
    "importStyle": "{Api}",
    "description": "Ingresse API",
    "examples": [
      "var Sdk = require('ingresse-sdk');\nvar ingresse = new Sdk();\n\n// You will have access to this API\n// after instantiate the Sdk.\nvar api = ingresse.api;"
    ],
    "lineNumber": 22,
    "interface": false,
    "expressionExtends": ""
  },
  {
    "__docId__": 19,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/apis/api.js~Api",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.js~Api#constructor",
    "access": null,
    "description": "Ingresse Api",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "custom",
        "description": "Initialize Api settings."
      }
    ]
  },
  {
    "__docId__": 20,
    "kind": "member",
    "name": "settings",
    "memberof": "src/apis/api.js~Api",
    "static": false,
    "longname": "src/apis/api.js~Api#settings",
    "access": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 21,
    "kind": "file",
    "name": "src/apis/api.recover.js",
    "content": "import {RequestHandler} from '../request/handler';\n\n/**\n * Ingresse Recover Password API\n */\nexport class ApiRecover extends RequestHandler {\n    /**\n     * Recover the user password\n     *\n     * @param {object} data    - The user data to recover password.\n     * @param {object} [query] - Optional request parameters.\n     * @returns {Promise}\n     */\n    recoverPassword(data, query = {}) {\n        return this.post('/recover/password', data, query);\n    }\n\n    /**\n     * Validate the hash sent for user\n     *\n     * @param {object} data    - The user data to validate password.\n     * @param {object} [query] - Optional request parameters.\n     * @returns {Promise}\n     */\n    validateHash(data, query = {}) {\n        return this.post('/recover/validate', data, query);\n    }\n\n    /**\n     * Update the user password\n     *\n     * @param {object} data    - The user data to validate password.\n     * @param {object} [query] - Optional request parameters.\n     * @returns {Promise}\n     */\n    updatePassword(data, query = {}) {\n        return this.post('/recover/update-password', data, query);\n    }\n}\n",
    "static": true,
    "longname": "src/apis/api.recover.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 22,
    "kind": "class",
    "name": "ApiRecover",
    "memberof": "src/apis/api.recover.js",
    "static": true,
    "longname": "src/apis/api.recover.js~ApiRecover",
    "access": null,
    "export": true,
    "importPath": "ingresse-sdk/src/apis/api.recover.js",
    "importStyle": "{ApiRecover}",
    "description": "Ingresse Recover Password API",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "src/request/handler.js~RequestHandler"
    ]
  },
  {
    "__docId__": 23,
    "kind": "method",
    "name": "recoverPassword",
    "memberof": "src/apis/api.recover.js~ApiRecover",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.recover.js~ApiRecover#recoverPassword",
    "access": null,
    "description": "Recover the user password",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The user data to recover password."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 24,
    "kind": "method",
    "name": "validateHash",
    "memberof": "src/apis/api.recover.js~ApiRecover",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.recover.js~ApiRecover#validateHash",
    "access": null,
    "description": "Validate the hash sent for user",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The user data to validate password."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 25,
    "kind": "method",
    "name": "updatePassword",
    "memberof": "src/apis/api.recover.js~ApiRecover",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.recover.js~ApiRecover#updatePassword",
    "access": null,
    "description": "Update the user password",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The user data to validate password."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 26,
    "kind": "file",
    "name": "src/apis/api.ticket.js",
    "content": "import {RequestHandler} from '../request/handler';\n\n/**\n * Ingresse Tickets Transfer API\n */\nexport class ApiTicketTransfer extends RequestHandler {\n    /**\n     * Creates a ticket transfer.\n     *\n     * @param {number} id - The ticket ID to get.\n     * @param {object} [data]  - The form with transfer data for post.\n     * @param {object} [query] - Optional request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * var ticketId = 123;\n     * var data = {\n     *      user: 456 //The user that will get the ticket\n     * };\n     *\n     * ingresse.apiTickets.createTicketTransfer(ticketId, data)\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     *\n     * ...\n     *  // To return the ticket for the last owner\n     *\n     * var ticketId = 123;\n     * var data = {\n     *      isReturn: true //With this option, the ticket will return to last owner.\n     * };\n     *\n     * ingresse.apiTickets.createTicketTransfer(ticketId, data)\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    createTicketTransfer(id, data = {}, query = {}) {\n        return this.post(`/ticket/${id}/transfer`, data, query);\n    }\n\n    /**\n     * Update a ticket transfer.\n     *\n     * @param {number} id - The ticket ID to get.\n     * @param {number} transferId - The transfer ID to get.\n     * @param {object} [data]  - The form with transfer data to post.\n     * @param {object} [query] - Optional request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * var ticketId = 123;\n     * var transferId = 456;\n     * var data = {\n     *      action: 'accept' // can be [accept, cancel, refuse]\n     * };\n     *\n     * ingresse.apiTickets.updateTicketTransfer(ticketId, transferId, data)\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    updateTicketTransfer(id, transferId, data = {}, query = {}) {\n        return this.post(`/ticket/${id}/transfer/${transferId}`, data, query);\n    }\n\n    /**\n     * Get the ticket transfer history.\n     *\n     * @param {string|number} id - The ticket ID to get.\n     * @param {object} [query]   - Optional request parameters.\n     * @returns {Promise}\n     */\n    getTicketTransferHistory(id, query = {}) {\n        return this.get(`/ticket/${id}/transfer`, query);\n    }\n}\n\n",
    "static": true,
    "longname": "src/apis/api.ticket.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 27,
    "kind": "class",
    "name": "ApiTicketTransfer",
    "memberof": "src/apis/api.ticket.js",
    "static": true,
    "longname": "src/apis/api.ticket.js~ApiTicketTransfer",
    "access": null,
    "export": true,
    "importPath": "ingresse-sdk/src/apis/api.ticket.js",
    "importStyle": "{ApiTicketTransfer}",
    "description": "Ingresse Tickets Transfer API",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "src/request/handler.js~RequestHandler"
    ]
  },
  {
    "__docId__": 28,
    "kind": "method",
    "name": "createTicketTransfer",
    "memberof": "src/apis/api.ticket.js~ApiTicketTransfer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.ticket.js~ApiTicketTransfer#createTicketTransfer",
    "access": null,
    "description": "Creates a ticket transfer.",
    "examples": [
      "...\n\nvar ticketId = 123;\nvar data = {\n     user: 456 //The user that will get the ticket\n};\n\ningresse.apiTickets.createTicketTransfer(ticketId, data)\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });\n\n...\n // To return the ticket for the last owner\n\nvar ticketId = 123;\nvar data = {\n     isReturn: true //With this option, the ticket will return to last owner.\n};\n\ningresse.apiTickets.createTicketTransfer(ticketId, data)\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The ticket ID to get."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "data",
        "description": "The form with transfer data for post."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 29,
    "kind": "method",
    "name": "updateTicketTransfer",
    "memberof": "src/apis/api.ticket.js~ApiTicketTransfer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.ticket.js~ApiTicketTransfer#updateTicketTransfer",
    "access": null,
    "description": "Update a ticket transfer.",
    "examples": [
      "...\n\nvar ticketId = 123;\nvar transferId = 456;\nvar data = {\n     action: 'accept' // can be [accept, cancel, refuse]\n};\n\ningresse.apiTickets.updateTicketTransfer(ticketId, transferId, data)\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The ticket ID to get."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "transferId",
        "description": "The transfer ID to get."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "data",
        "description": "The form with transfer data to post."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 30,
    "kind": "method",
    "name": "getTicketTransferHistory",
    "memberof": "src/apis/api.ticket.js~ApiTicketTransfer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.ticket.js~ApiTicketTransfer#getTicketTransferHistory",
    "access": null,
    "description": "Get the ticket transfer history.",
    "lineNumber": 88,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The ticket ID to get."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 31,
    "kind": "file",
    "name": "src/apis/api.transactions.js",
    "content": "import {RequestHandler} from '../request/handler';\n\n/**\n * Ingresse Transactions API\n */\nexport class ApiTransactions extends RequestHandler {\n    /**\n     * Get transactions report\n     *\n     * @param {string} [agregateBy] - Optional: 'status'.\n     * @param {object} [query]      - Optional request parameters.\n     *\n     * @returns {Promise}\n     */\n    getReport(agregateBy = 'date', query = {}) {\n        return this.get(`/transaction-report/${agregateBy}`, query);\n    }\n\n    /**\n     * Get a list of transactions\n     *\n     * @param {object} [query] - Optional request parameters.\n     *\n     * @returns {Promise}\n     */\n    getList(query = {}) {\n        return this.get('/transactions', query);\n    }\n\n    /**\n     * Get a transaction by ID\n     *\n     * @param {string} id      - Transaction ID.\n     * @param {object} [query] - Optional request parameters.\n     *\n     * @returns {Promise}\n     */\n    getById(id, query = {}) {\n        return this.get(`/transaction/${id}`, query);\n    }\n\n    /**\n     * Get refund reasons\n     *\n     * @param {object} [query] - Optional request parameters.\n     *\n     * @returns {Promise}\n     */\n    getRefundReasons(query = {}) {\n        return this.get('/refundReasons', query);\n    }\n\n    /**\n     * Refund a transaction\n     *\n     * @param {string} id      - Transaction ID.\n     * @param {object} [data]  - Optional transaction data.\n     * @param {object} [query] - Optional request parameters.\n     *\n     * @returns {Promise}\n     */\n    refund(id, data = null, query = {}) {\n\n        return this.post(`/shop/${id}/refund`, data, query);\n    }\n\n    /**\n     * Capture an authorized transaction\n     *\n     * @param {string} id      - Transaction ID.\n     * @param {object} [query] - Optional request parameters.\n     *\n     * @returns {Promise}\n     */\n    capture(id, query = {}) {\n\n        return this.post(`/shop/${id}/capture`, null, query);\n    }\n}\n",
    "static": true,
    "longname": "src/apis/api.transactions.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 32,
    "kind": "class",
    "name": "ApiTransactions",
    "memberof": "src/apis/api.transactions.js",
    "static": true,
    "longname": "src/apis/api.transactions.js~ApiTransactions",
    "access": null,
    "export": true,
    "importPath": "ingresse-sdk/src/apis/api.transactions.js",
    "importStyle": "{ApiTransactions}",
    "description": "Ingresse Transactions API",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "src/request/handler.js~RequestHandler"
    ]
  },
  {
    "__docId__": 33,
    "kind": "method",
    "name": "getReport",
    "memberof": "src/apis/api.transactions.js~ApiTransactions",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.transactions.js~ApiTransactions#getReport",
    "access": null,
    "description": "Get transactions report",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "agregateBy",
        "description": "Optional: 'status'."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 34,
    "kind": "method",
    "name": "getList",
    "memberof": "src/apis/api.transactions.js~ApiTransactions",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.transactions.js~ApiTransactions#getList",
    "access": null,
    "description": "Get a list of transactions",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 35,
    "kind": "method",
    "name": "getById",
    "memberof": "src/apis/api.transactions.js~ApiTransactions",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.transactions.js~ApiTransactions#getById",
    "access": null,
    "description": "Get a transaction by ID",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Transaction ID."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 36,
    "kind": "method",
    "name": "getRefundReasons",
    "memberof": "src/apis/api.transactions.js~ApiTransactions",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.transactions.js~ApiTransactions#getRefundReasons",
    "access": null,
    "description": "Get refund reasons",
    "lineNumber": 49,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 37,
    "kind": "method",
    "name": "refund",
    "memberof": "src/apis/api.transactions.js~ApiTransactions",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.transactions.js~ApiTransactions#refund",
    "access": null,
    "description": "Refund a transaction",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Transaction ID."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "data",
        "description": "Optional transaction data."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 38,
    "kind": "method",
    "name": "capture",
    "memberof": "src/apis/api.transactions.js~ApiTransactions",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.transactions.js~ApiTransactions#capture",
    "access": null,
    "description": "Capture an authorized transaction",
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Transaction ID."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 39,
    "kind": "file",
    "name": "src/apis/api.user.js",
    "content": "import {RequestHandler} from '../request/handler';\nimport {Cookie} from '../helper/cookie';\n\n/**\n * Ingresse User API\n */\nexport class ApiUser extends RequestHandler {\n    /**\n     * Initialize the Api User\n     */\n    constructor(settings) {\n        super();\n        this.credentials = {};\n        this.cookie = new Cookie(settings ? settings.companyId : null);\n    }\n\n    /**\n     * Get user\n     *\n     * @param {string|number} id - The user ID to get.\n     * @param {object} [query]   - Optional request parameters.\n     * @returns {Promise}\n     */\n    getUser(id, query = {}) {\n        return this.get(`/user/${id}`, query);\n    }\n\n    /**\n     * Get user picture\n     *\n     * @param {string|number} id - The user ID to get.\n     * @param {object} [query]   - Optional request parameters.\n     * @returns {Promise}\n     */\n    getUserPicture(id, query = {}) {\n        return this.get(`/user/${id}/picture`, query);\n    }\n\n    /**\n     * Get the user tickets.\n     *\n     * @param {string|number} id - The user ID to get.\n     * @param {object} [query]   - Optional request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * var userId = 123;\n     * var query = {\n     *    status: 'pending', //Can be [pending, accepted, refused, returned, cancelled].\n     *    pageSize: 10,\n     *    page: currentPage\n     * };\n     *\n     * ingresse.apiUser.getUserTicket(userId, query)\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    getUserTickets(id, query = {}) {\n        return this.get(`/user/${id}/tickets`, query);\n    }\n\n    /**\n     * Create a new user.\n     *\n     * @param {object} [data]  - The form with user data for post.\n     * @param {object} [query] - Optional request parameters.\n     * @returns {Promise}\n     */\n    createUser(data = {}, query = {}) {\n        query.method = 'create';\n        return this.post('/user/', data, query);\n    }\n\n    /**\n     * Get the new user tickets.\n     *\n     * @param {string|number} id - The user ID to get.\n     * @param {object} [query] - Optional request parameters.\n     * @returns {Promise}\n     */\n    getUserNewTickets(id, query = {}) {\n        return this.get(`/user/${id}/transfers`, query);\n    }\n\n    /**\n     * Get the user events sessions.\n     *\n     * @param {string|number} id - The user ID to get.\n     * @param {object} [query] - Optional request parameters.\n     * @returns {Promise}\n     */\n    getAllUserSessions(id, query = {}) {\n        return this.get(`/user/${id}/sessions`, query);\n    }\n\n    /**\n     * Get the user permission.\n     *\n     * @param {number} id - The user id to get.\n     * @param {object} [query] - Optional request parameters.\n     * @param {object} [query.context] - The context that get user permission. Ex: 'event'\n     * @param {object} [query.contextValue] - The contex value. Ex: '123123'\n     * @param {object} [query.resource] - The resource type. Ex: 'tickets'.\n     * @param {object} [query.resourceValue] - For a specific type of permission. Ex: '__ANY__' or 123123.\n     * @param {object} [query.page] - The current page with user permission.\n     * @param {object} [query.pageSize] - Quantity of permission per page. Default: 25\n     */\n    getUserPermissions(id, query = {}) {\n        return this.get(`/user/${id}/permissions`, query);\n    }\n\n    /*\n     * Get the ticket session\n     *\n     * @param {number} id - The user ID to get.\n     * @param {number} sessionId - The session id.\n     * @param {object} [query] - Optional request parameters.\n     * @returns {Promise}\n     */\n    getUserSessionTickets(id, sessionId, query = {}) {\n        return this.get(`/user/${id}/sessions/${sessionId}/tickets`, query);\n    }\n\n    /**\n     * Search the users for transfer ticket.\n     *\n     * @param {string} term - The text to search.\n     * @param {object} [query] - Optional request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * var term = 'Jefferson Silva';\n     * var query = {\n     *    size: 12\n     * };\n     * ingresse.apiUser.getUserForTransfer(term, query)\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    getUserForTransfer(term, query = {}) {\n        query.term = term;\n        return this.get('/search/transfer/user', query);\n    }\n\n    /**\n     * Get the recent transfers of a user.\n     *\n     * @param {number} id - The user ID to get.\n     * @param {object} [query] - Optional request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * var id = 123;\n     * var query = {\n     *    size: 12,\n     *    order: 'DESC'\n     * };\n     *\n     * ingresse.apiUser.getRecentTransfers(id, query)\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    getRecentTransfers(id, query = {}) {\n        return this.get(`/user/${id}/last-transfers`, query);\n    }\n\n    /**\n     * Saves the credentials in cookie.\n     *\n     * @param {number} userId - User Id.\n     * @param {string} token  - The user token.\n     * @param {string} jwt    - The user jwt token.\n     *\n     * @returns {Object}\n     */\n    saveCredentials(userId, token, jwt) {\n        this.credentials.userId = userId;\n        this.credentials.token  = token;\n        this.credentials.jwt    = jwt;\n\n        this.cookie.createCookie('userId', userId, 5);\n        this.cookie.createCookie('token', token, 5);\n        this.cookie.createCookie('jwt', jwt, 5);\n\n        return this.credentials;\n    }\n\n    /**\n     * Gets the user credentials\n     *\n     * @returns {Object}\n     */\n    getCredentials() {\n        for (let prop in this.credentials) {\n            if (this.credentials[prop]) {\n                return this.credentials;\n            }\n        }\n\n        this.credentials.userId = this.cookie.getCookie('userId');\n        this.credentials.token  = this.cookie.getCookie('token');\n        this.credentials.jwt    = this.cookie.getCookie('jwt');\n\n        if (this.credentials.userId ||\n            this.credentials.token ||\n            this.credentials.jwt) {\n            return this.credentials;\n        }\n\n        return null;\n    }\n\n    /**\n     * Delete the user credentials\n     */\n    clearCredentials() {\n        this.cookie.deleteCookie('userId');\n        this.cookie.deleteCookie('token');\n        this.cookie.deleteCookie('jwt');\n    }\n}\n",
    "static": true,
    "longname": "src/apis/api.user.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 40,
    "kind": "class",
    "name": "ApiUser",
    "memberof": "src/apis/api.user.js",
    "static": true,
    "longname": "src/apis/api.user.js~ApiUser",
    "access": null,
    "export": true,
    "importPath": "ingresse-sdk/src/apis/api.user.js",
    "importStyle": "{ApiUser}",
    "description": "Ingresse User API",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "src/request/handler.js~RequestHandler"
    ]
  },
  {
    "__docId__": 41,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/apis/api.user.js~ApiUser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.user.js~ApiUser#constructor",
    "access": null,
    "description": "Initialize the Api User",
    "lineNumber": 11,
    "params": [
      {
        "name": "settings",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 42,
    "kind": "member",
    "name": "credentials",
    "memberof": "src/apis/api.user.js~ApiUser",
    "static": false,
    "longname": "src/apis/api.user.js~ApiUser#credentials",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 43,
    "kind": "member",
    "name": "cookie",
    "memberof": "src/apis/api.user.js~ApiUser",
    "static": false,
    "longname": "src/apis/api.user.js~ApiUser#cookie",
    "access": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 44,
    "kind": "method",
    "name": "getUser",
    "memberof": "src/apis/api.user.js~ApiUser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.user.js~ApiUser#getUser",
    "access": null,
    "description": "Get user",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The user ID to get."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 45,
    "kind": "method",
    "name": "getUserPicture",
    "memberof": "src/apis/api.user.js~ApiUser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.user.js~ApiUser#getUserPicture",
    "access": null,
    "description": "Get user picture",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The user ID to get."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 46,
    "kind": "method",
    "name": "getUserTickets",
    "memberof": "src/apis/api.user.js~ApiUser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.user.js~ApiUser#getUserTickets",
    "access": null,
    "description": "Get the user tickets.",
    "examples": [
      "...\n\nvar userId = 123;\nvar query = {\n   status: 'pending', //Can be [pending, accepted, refused, returned, cancelled].\n   pageSize: 10,\n   page: currentPage\n};\n\ningresse.apiUser.getUserTicket(userId, query)\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The user ID to get."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 47,
    "kind": "method",
    "name": "createUser",
    "memberof": "src/apis/api.user.js~ApiUser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.user.js~ApiUser#createUser",
    "access": null,
    "description": "Create a new user.",
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "data",
        "description": "The form with user data for post."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 48,
    "kind": "method",
    "name": "getUserNewTickets",
    "memberof": "src/apis/api.user.js~ApiUser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.user.js~ApiUser#getUserNewTickets",
    "access": null,
    "description": "Get the new user tickets.",
    "lineNumber": 87,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The user ID to get."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 49,
    "kind": "method",
    "name": "getAllUserSessions",
    "memberof": "src/apis/api.user.js~ApiUser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.user.js~ApiUser#getAllUserSessions",
    "access": null,
    "description": "Get the user events sessions.",
    "lineNumber": 98,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The user ID to get."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 50,
    "kind": "method",
    "name": "getUserPermissions",
    "memberof": "src/apis/api.user.js~ApiUser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.user.js~ApiUser#getUserPermissions",
    "access": null,
    "description": "Get the user permission.",
    "lineNumber": 114,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The user id to get."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query.context",
        "description": "The context that get user permission. Ex: 'event'"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query.contextValue",
        "description": "The contex value. Ex: '123123'"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query.resource",
        "description": "The resource type. Ex: 'tickets'."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query.resourceValue",
        "description": "For a specific type of permission. Ex: '__ANY__' or 123123."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query.page",
        "description": "The current page with user permission."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query.pageSize",
        "description": "Quantity of permission per page. Default: 25"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 51,
    "kind": "method",
    "name": "getUserSessionTickets",
    "memberof": "src/apis/api.user.js~ApiUser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.user.js~ApiUser#getUserSessionTickets",
    "access": null,
    "description": null,
    "lineNumber": 126,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "sessionId",
        "types": [
          "*"
        ]
      },
      {
        "name": "query",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "method",
    "name": "getUserForTransfer",
    "memberof": "src/apis/api.user.js~ApiUser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.user.js~ApiUser#getUserForTransfer",
    "access": null,
    "description": "Search the users for transfer ticket.",
    "examples": [
      "...\n\nvar term = 'Jefferson Silva';\nvar query = {\n   size: 12\n};\ningresse.apiUser.getUserForTransfer(term, query)\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 152,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "term",
        "description": "The text to search."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 53,
    "kind": "method",
    "name": "getRecentTransfers",
    "memberof": "src/apis/api.user.js~ApiUser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.user.js~ApiUser#getRecentTransfers",
    "access": null,
    "description": "Get the recent transfers of a user.",
    "examples": [
      "...\n\nvar id = 123;\nvar query = {\n   size: 12,\n   order: 'DESC'\n};\n\ningresse.apiUser.getRecentTransfers(id, query)\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 181,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The user ID to get."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 54,
    "kind": "method",
    "name": "saveCredentials",
    "memberof": "src/apis/api.user.js~ApiUser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.user.js~ApiUser#saveCredentials",
    "access": null,
    "description": "Saves the credentials in cookie.",
    "lineNumber": 194,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "userId",
        "description": "User Id."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "token",
        "description": "The user token."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "jwt",
        "description": "The user jwt token."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 55,
    "kind": "method",
    "name": "getCredentials",
    "memberof": "src/apis/api.user.js~ApiUser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.user.js~ApiUser#getCredentials",
    "access": null,
    "description": "Gets the user credentials",
    "lineNumber": 211,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 56,
    "kind": "method",
    "name": "clearCredentials",
    "memberof": "src/apis/api.user.js~ApiUser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/api.user.js~ApiUser#clearCredentials",
    "access": null,
    "description": "Delete the user credentials",
    "lineNumber": 234,
    "params": []
  },
  {
    "__docId__": 57,
    "kind": "file",
    "name": "src/apis/event.js",
    "content": "import {RequestHandler} from '../request/handler';\nimport {auth} from '../auth';\n\n/**\n * Ingresse Event's API\n *\n * API to get, create and update events.\n *\n * @example\n * var sdk = require('ingresse-sdk');\n * var ingresse = new Sdk();\n *\n * // You will have access to this API\n * // after instantiate the Sdk.\n * var event = ingresse.event;\n */\nexport class Event extends RequestHandler {\n    /**\n     * Event Api\n     *\n     * @param {object} [custom={}] - Initialize Event Api settings.\n     */\n    constructor(custom = {}) {\n        let settings = {\n            url : 'https://event.ingresse.com',\n            auth: auth.Jwt.type(),\n        };\n\n        Object.assign(settings, custom);\n        super(settings);\n\n        this.settings = settings;\n    }\n\n    /**\n     * Get event by ID\n     *\n     * @param {number} id      - The event ID to get.\n     * @param {object} [query] - Optional request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * ingresse.event.getById(200)\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    getById(id, query = {}) {\n        return this.get(`/${id}`, query);\n    }\n\n    /**\n     * Get event attributes\n     *\n     * @param {number} id      - The event ID to get.\n     * @param {object} [query] - Optional request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * ingresse.event.getAttributes(20866)\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    getAttributes(id, query = {}) {\n        return this.get(`/${id}/attributes`, query);\n    }\n\n    /**\n     * Create new Event\n     *\n     * @param {object} data    - Data to create a new event.\n     * @param {object} [query] - Optional request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * ingresse.event.create({ name: 'My Event Name' })\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    create(data = {}, query = {}) {\n        return this.post('/', data, query);\n    }\n\n    /**\n     * Update an Event\n     *\n     * @param {string|number} id - The Event ID to update.\n     * @param {object} data      - Data to update Event.\n     * @param {object} [query]   - Optional request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * ingresse.event.update(200, { name: 'My Updated Event Name' })\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    update(id, data = {}, query = {}) {\n        return this.put(`/${id}`, data, query);\n    }\n\n    /**\n     * Update an Event Poster\n     *\n     * @param {string|number} id - The Event ID to update.\n     * @param {object} data      - Data to update event poster.\n     * @param {object} [query]   - Optional request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * ingresse.event.updatePoster(12, {\n     *          poster: {\n     *              format: 'base64',\n     *              image : 'data:image/jpeg;base64 8aAVdagg87h87t8q...',\n     *          }\n     *     })\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    updatePoster(id, data = {}, query = {}) {\n        return this.put(`/${id}/poster`, data, query);\n    }\n\n    /**\n     * Delete Event Poster\n     *\n     * @param {string|number} id - The Event ID to delete poster.\n     * @param {object} [query]   - Optional request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * ingresse.event.deletePoster(12)\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    deletePoster(id, query = {}) {\n        return this.delete(`/${id}/poster`, query);\n    }\n\n    /**\n     * Update Event Attributes\n     *\n     * @param {string|number} id - The Event ID to update.\n     * @param {object} data      - Data to update event attributes.\n     * @param {object} [query]   - Optional request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * ingresse.event.updateAttributes(12, {\n     *          attributes: [\n     *              {\n     *                  name : 'video_url',\n     *                  value: 'https://www.youtube.com/watch?v=hRGnjgBOHIk',\n     *              }\n     *          ]\n     *     })\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    updateAttributes(id, data = {}, query = {}) {\n        return this.put(`/${id}/attributes`, data, query);\n    }\n\n    /**\n     * Validate if slug is available to use in an Event.\n     *\n     * This method will return a `Promise` so you can use\n     * `.then` and `.catch` methods.\n     *\n     * @param {string} term    - The slug term to check.\n     * @param {object} [query] - Optional request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * ingresse.event.validateSlug('my-event-slug')\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    validateSlug(term, query = {}) {\n        return this.get(`/slugs/${term}`, query);\n    }\n\n    /**\n     * Get all Events Categories\n     *\n     * This method will return a `Promise` so you can use\n     * `.then` and `.catch` methods.\n     *\n     * @param {object} [query] - Optional request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * ingresse.event.getCategories()\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    getCategories(query = {}) {\n        return this.get('/categories', query);\n    }\n\n    /**\n     * Get all Private Events Categories\n     *\n     * This method will return a `Promise` so you can use\n     * `.then` and `.catch` methods.\n     *\n     * @param {object} [query] - Optional request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * ingresse.event.getPrivateCategories()\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    getPrivateCategories(query = {}) {\n        return this.get('/categories/private', query);\n    }\n\n    /**\n     * Get Event Category by ID\n     *\n     * @param {string|number} id - The Category ID to get.\n     * @param {object} [query]   - Optional request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * ingresse.event.getCategory(12)\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    getCategory(id, query = {}) {\n        return this.get(`/categories/${id}`, query);\n    }\n\n    /**\n     * Remove Category from specific Event\n     *\n     * @param {string|number} eventId    - The Event ID to remove category.\n     * @param {string|number} categoryId - The Category ID to remove.\n     * @param {object} [query]           - Optional request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * ingresse.event.deleteCategory(123, 321)\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    deleteCategory(eventId, categoryId, query = {}) {\n        return this.delete(`/${eventId}/category/${categoryId}`, query);\n    }\n\n    /**\n     * Remove an Event Session\n     *\n     * @param {string|number} eventId   - The Event ID to remove session.\n     * @param {string|number} sessionId - The Session ID to remove.\n     * @param {object} [query]          - Optional request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * ingresse.event.deleteSession(123, 321)\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    deleteSession(eventId, sessionId, query = {}) {\n        return this.delete(`/${eventId}/sessions/${sessionId}`, query);\n    }\n\n    /**\n     * Get events by producer, based on JWT\n     *\n     * @param {object} [query] - Request parameters/filters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * ingresse.event.searchByProducer({ from: 'now-1d' })\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    searchByProducer(query = {}) {\n        return this.get('/search/producer', query);\n    }\n\n    /**\n     * Update/Add users permission to the event\n     *\n     * @param {string|number} eventId - The Event ID.\n     * @param {object}        data    - Object with attribute `usersPermission` as Array with Users IDs to attribute Permission.\n     * @param {object}        [query] - Request parameters/filters.\n     *\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     * var data = { usersPermission: [ 321 ] };\n     *\n     * ingresse.event.updatePermission(21232, data)\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    updatePermission(eventId, data = {}, query = {}) {\n        return this.put(`/${eventId}/permission`, data, query);\n    }\n\n    /**\n     * Remove permission on the event of only unique user\n     *\n     * @param {string|number} eventId - The Event ID.\n     * @param {object}        data    - Object with attribute `usersPermission` as Array with Users IDs to delete Permission.\n     * @param {object}        [query] - Request parameters/filters.\n     *\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     * var data = { usersPermission: [ 321 ] };\n     *\n     * ingresse.event.deletePermission(21232, data)\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    deletePermission(eventId, data = {}, query = {}) {\n        return this.delete(`/${eventId}/permission`, query, data);\n    }\n\n    /**\n     * Add users as admins of the event\n     *\n     * @param {string|number} eventId - The Event ID.\n     * @param {object}        data    - Object with attribute `usersPermission` as Array with Users IDs to attribute Permission.\n     * @param {object}        [query] - Request parameters/filters.\n     *\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     * var data = { admins: [ 321, 123, 654 ] };\n     *\n     * ingresse.event.addAdmins(21232, data)\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    addAdmins(eventId, data = {}, query = {}) {\n        return this.post(`/${eventId}/admin`, data, query);\n    }\n\n    /**\n     * Delete user as event's admin\n     * Only unique user\n     *\n     * @param {string|number} eventId - The Event ID.\n     * @param {string|number} userId  - The User ID.\n     * @param {object}        [query] - Request parameters/filters.\n     *\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * ingresse.event.deleteAdmin(21232, 654)\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    deleteAdmin(eventId, userId, query = {}) {\n        return this.delete(`/${eventId}/admin/${userId}`, query);\n    }\n}\n",
    "static": true,
    "longname": "src/apis/event.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 58,
    "kind": "class",
    "name": "Event",
    "memberof": "src/apis/event.js",
    "static": true,
    "longname": "src/apis/event.js~Event",
    "access": null,
    "export": true,
    "importPath": "ingresse-sdk/src/apis/event.js",
    "importStyle": "{Event}",
    "description": "Ingresse Event's API\n\nAPI to get, create and update events.",
    "examples": [
      "var sdk = require('ingresse-sdk');\nvar ingresse = new Sdk();\n\n// You will have access to this API\n// after instantiate the Sdk.\nvar event = ingresse.event;"
    ],
    "lineNumber": 17,
    "interface": false,
    "extends": [
      "src/request/handler.js~RequestHandler"
    ]
  },
  {
    "__docId__": 59,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/apis/event.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/event.js~Event#constructor",
    "access": null,
    "description": "Event Api",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "custom",
        "description": "Initialize Event Api settings."
      }
    ]
  },
  {
    "__docId__": 60,
    "kind": "member",
    "name": "settings",
    "memberof": "src/apis/event.js~Event",
    "static": false,
    "longname": "src/apis/event.js~Event#settings",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "getById",
    "memberof": "src/apis/event.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/event.js~Event#getById",
    "access": null,
    "description": "Get event by ID",
    "examples": [
      "...\n\ningresse.event.getById(200)\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The event ID to get."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "getAttributes",
    "memberof": "src/apis/event.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/event.js~Event#getAttributes",
    "access": null,
    "description": "Get event attributes",
    "examples": [
      "...\n\ningresse.event.getAttributes(20866)\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The event ID to get."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "create",
    "memberof": "src/apis/event.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/event.js~Event#create",
    "access": null,
    "description": "Create new Event",
    "examples": [
      "...\n\ningresse.event.create({ name: 'My Event Name' })\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 97,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Data to create a new event."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "update",
    "memberof": "src/apis/event.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/event.js~Event#update",
    "access": null,
    "description": "Update an Event",
    "examples": [
      "...\n\ningresse.event.update(200, { name: 'My Updated Event Name' })\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 120,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The Event ID to update."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Data to update Event."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "updatePoster",
    "memberof": "src/apis/event.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/event.js~Event#updatePoster",
    "access": null,
    "description": "Update an Event Poster",
    "examples": [
      "...\n\ningresse.event.updatePoster(12, {\n         poster: {\n             format: 'base64',\n             image : 'data:image/jpeg;base64 8aAVdagg87h87t8q...',\n         }\n    })\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 148,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The Event ID to update."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Data to update event poster."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "deletePoster",
    "memberof": "src/apis/event.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/event.js~Event#deletePoster",
    "access": null,
    "description": "Delete Event Poster",
    "examples": [
      "...\n\ningresse.event.deletePoster(12)\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 170,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The Event ID to delete poster."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "updateAttributes",
    "memberof": "src/apis/event.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/event.js~Event#updateAttributes",
    "access": null,
    "description": "Update Event Attributes",
    "examples": [
      "...\n\ningresse.event.updateAttributes(12, {\n         attributes: [\n             {\n                 name : 'video_url',\n                 value: 'https://www.youtube.com/watch?v=hRGnjgBOHIk',\n             }\n         ]\n    })\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 200,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The Event ID to update."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Data to update event attributes."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "validateSlug",
    "memberof": "src/apis/event.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/event.js~Event#validateSlug",
    "access": null,
    "description": "Validate if slug is available to use in an Event.\n\nThis method will return a `Promise` so you can use\n`.then` and `.catch` methods.",
    "examples": [
      "...\n\ningresse.event.validateSlug('my-event-slug')\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 225,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "term",
        "description": "The slug term to check."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "getCategories",
    "memberof": "src/apis/event.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/event.js~Event#getCategories",
    "access": null,
    "description": "Get all Events Categories\n\nThis method will return a `Promise` so you can use\n`.then` and `.catch` methods.",
    "examples": [
      "...\n\ningresse.event.getCategories()\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 249,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "getPrivateCategories",
    "memberof": "src/apis/event.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/event.js~Event#getPrivateCategories",
    "access": null,
    "description": "Get all Private Events Categories\n\nThis method will return a `Promise` so you can use\n`.then` and `.catch` methods.",
    "examples": [
      "...\n\ningresse.event.getPrivateCategories()\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 273,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "getCategory",
    "memberof": "src/apis/event.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/event.js~Event#getCategory",
    "access": null,
    "description": "Get Event Category by ID",
    "examples": [
      "...\n\ningresse.event.getCategory(12)\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 295,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The Category ID to get."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 72,
    "kind": "method",
    "name": "deleteCategory",
    "memberof": "src/apis/event.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/event.js~Event#deleteCategory",
    "access": null,
    "description": "Remove Category from specific Event",
    "examples": [
      "...\n\ningresse.event.deleteCategory(123, 321)\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 318,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "The Event ID to remove category."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "categoryId",
        "description": "The Category ID to remove."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "deleteSession",
    "memberof": "src/apis/event.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/event.js~Event#deleteSession",
    "access": null,
    "description": "Remove an Event Session",
    "examples": [
      "...\n\ningresse.event.deleteSession(123, 321)\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 341,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "The Event ID to remove session."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "sessionId",
        "description": "The Session ID to remove."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "searchByProducer",
    "memberof": "src/apis/event.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/event.js~Event#searchByProducer",
    "access": null,
    "description": "Get events by producer, based on JWT",
    "examples": [
      "...\n\ningresse.event.searchByProducer({ from: 'now-1d' })\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 362,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Request parameters/filters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "updatePermission",
    "memberof": "src/apis/event.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/event.js~Event#updatePermission",
    "access": null,
    "description": "Update/Add users permission to the event",
    "examples": [
      "...\nvar data = { usersPermission: [ 321 ] };\n\ningresse.event.updatePermission(21232, data)\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 387,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "The Event ID."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Object with attribute `usersPermission` as Array with Users IDs to attribute Permission."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Request parameters/filters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "deletePermission",
    "memberof": "src/apis/event.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/event.js~Event#deletePermission",
    "access": null,
    "description": "Remove permission on the event of only unique user",
    "examples": [
      "...\nvar data = { usersPermission: [ 321 ] };\n\ningresse.event.deletePermission(21232, data)\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 412,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "The Event ID."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Object with attribute `usersPermission` as Array with Users IDs to delete Permission."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Request parameters/filters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "addAdmins",
    "memberof": "src/apis/event.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/event.js~Event#addAdmins",
    "access": null,
    "description": "Add users as admins of the event",
    "examples": [
      "...\nvar data = { admins: [ 321, 123, 654 ] };\n\ningresse.event.addAdmins(21232, data)\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 437,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "The Event ID."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Object with attribute `usersPermission` as Array with Users IDs to attribute Permission."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Request parameters/filters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "deleteAdmin",
    "memberof": "src/apis/event.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/event.js~Event#deleteAdmin",
    "access": null,
    "description": "Delete user as event's admin\nOnly unique user",
    "examples": [
      "...\n\ningresse.event.deleteAdmin(21232, 654)\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 462,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "The Event ID."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "userId",
        "description": "The User ID."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Request parameters/filters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 79,
    "kind": "file",
    "name": "src/apis/index.js",
    "content": "import {Ticket} from './ticket';\nimport {Event} from './event';\nimport {Api} from './api';\n\n\nexport var apis = {\n    ticket: Ticket,\n    event : Event,\n    api   : Api,\n};\n\n",
    "static": true,
    "longname": "src/apis/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 80,
    "kind": "variable",
    "name": "apis",
    "memberof": "src/apis/index.js",
    "static": true,
    "longname": "src/apis/index.js~apis",
    "access": null,
    "export": true,
    "importPath": "ingresse-sdk/src/apis/index.js",
    "importStyle": "{apis}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"ticket\": *, \"event\": *, \"api\": *}"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "file",
    "name": "src/apis/ticket.js",
    "content": "import {RequestHandler} from '../request/handler';\nimport {auth} from '../auth';\n\n/**\n * Ingresse Ticket's API\n *\n * API to get, create, update or remove tickets.\n *\n * @example\n * var Sdk = require('ingresse-sdk');\n * var ingresse = new Sdk();\n *\n * // You will have access to this API\n * // after instantiate the Sdk.\n * var ticket = ingresse.ticket;\n */\nexport class Ticket extends RequestHandler {\n    /**\n     * Ticket Api\n     *\n     * @param {object} [custom={}] - Initialize Ticket Api settings.\n     */\n    constructor(custom = {}) {\n        let settings = {\n            url : 'https://ticket.ingresse.com',\n            auth: auth.Jwt.type(),\n        };\n\n        Object.assign(settings, custom);\n        super(settings);\n\n        this.settings = settings;\n    }\n\n    /**\n     * Get a list of ticket types\n     * This method will return a `Promise` so you can use\n     * `.then` and `.catch` methods.\n     *\n     * @param {object} [query] - Optional request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * ingresse.ticket.getTypes()\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    getTypes(query = {}) {\n        return this.get('/types', query);\n    }\n\n    /**\n     * Get a list of ticket items\n     * This method will return a `Promise` so you can use\n     * `.then` and `.catch` methdos.\n     *\n     * @param {object} [query] - Optional request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * ingresse.ticket.getItems()\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    getItems(query = {}) {\n        return this.get('/items', query);\n    }\n\n    /**\n     * Get item by ID\n     *\n     * @param {string|number} id - The item ID to get.\n     * @param {object} [query]   - Optional request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * ingresse.ticket.getItem(200)\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    getItem(id, query = {}) {\n        return this.get(`/items/${id}`, query);\n    }\n\n    /**\n     * Create new Ticket item\n     *\n     * @param {object} data    - Data to create a new ticket item.\n     * @param {object} [query] - Optional request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * ingresse.ticket.newItem({ name: 'My Ticket Name' })\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    newItem(data = {}, query = {}) {\n        return this.post('/items', data, query);\n    }\n\n    /**\n     * Update a ticket item\n     *\n     * @param {string|number} id - The item ID to update.\n     * @param {object} data      - Data to update item.\n     * @param {object} [query]   - Optional request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * ingresse.ticket.updateItem(200, { name: 'My Updated Ticket Name' })\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    updateItem(id, data = {}, query = {}) {\n        return this.put(`/items/${id}`, data, query);\n    }\n\n    /**\n     * Remove a ticket item\n     *\n     * @param {string|number} id - The item ID to remove.\n     * @param {object} [query]   - Optional request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * ingresse.ticket.removeItem(200)\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    removeItem(id, query = {}) {\n        return this.put(`/items/${id}`, query);\n    }\n\n    /**\n     * Create new ticket attribute\n     *\n     * @param {number} id        - The item ID to create attribute.\n     * @param {object} attribute - The attribute data.\n     * @param {object} [query]   - Optional request parameters.\n     *\n     * @returns Promise\n     *\n     * @example\n     * ...\n     *\n     * ingresse.ticket.newAttribute(200, { key: 'min', value: '1', type: 'integer' })\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    newAttribute(id, attribute, query) {\n        return this.post(`/items/${id}/attributes`, attribute, query);\n    }\n\n    /**\n     * Updated ticket attribute\n     *\n     * @param {number} id          - The item ID to update attribute.\n     * @param {object} attribute   - The attribute data.\n     * @param {object} [query]     - Optional request parameters.\n     *\n     * @returns Promise\n     *\n     * @example\n     * ...\n     *\n     * ingresse.ticket.updateAttribute(200, { key: 'minimum', value: 5, type: 'integer' })\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    updateAttribute(id, attribute, query) {\n        return this.put(`/items/${id}/attributes`, attribute, query);\n    }\n\n    /**\n     * Create new sale period to ticket\n     *\n     * @param {number} id         - The item ID to create sale period.\n     * @param {object} salePeriod - The sale period data.\n     * @param {object} [query]    - Optional request parameters.\n     *\n     * @returns Promise\n     *\n     * @example\n     * ...\n     *\n     * ingresse.ticket.newSalePeriod({\n     *          appCategoryId: 1,\n     *          start: '2016-10-10 20:20:00',\n     *          finish: '2016-11-10 20:20:00',\n     *          available: 1\n     *      })\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    newSalePeriod(id, salePeriod, query) {\n        return this.post(`/items/${id}/sales-period`, salePeriod, query);\n    }\n\n    /**\n     * Updated ticket sale period\n     *\n     * @param {number} id         - The item ID to update the sale period.\n     * @param {object} salePeriod - The salePeriod data.\n     * @param {object} [query]    - Optional request parameters.\n     *\n     * @returns Promise\n     *\n     * @example\n     * ...\n     *\n     * ingresse.ticket.updateSalePeriod(200, {\n     *          appCategoryId: 1,\n     *          start: '2016-11-20 10:10:00',\n     *          finish: '2016-12-20 10:10:00',\n     *          available: 1\n     *      })\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    updateSalePeriod(id, salePeriod, query) {\n        return this.put(`/items/${id}/sales-period`, salePeriod, query);\n    }\n\n    /**\n     * Create new values to ticket\n     *\n     * @param {number} id      - The item ID to create values.\n     * @param {object} values  - The values data.\n     * @param {object} [query] - Optional request parameters.\n     *\n     * @returns Promise\n     *\n     * @example\n     * ...\n     *\n     * ingresse.ticket.newValues({\n     *          price: 10000,\n     *          feeSale: 500,\n     *          feeProducer: 500\n     *      })\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    newValues(id, values, query) {\n        return this.post(`/items/${id}/values`, values, query);\n    }\n\n    /**\n     * Updated ticket values\n     *\n     * @param {number} id      - The item ID to update values.\n     * @param {object} values  - The values data.\n     * @param {object} [query] - Optional request parameters.\n     *\n     * @returns Promise\n     *\n     * @example\n     * ...\n     *\n     * ingresse.ticket.updateValues(200, {\n     *          price: 20000,\n     *          feeSale: 1000,\n     *          feeProducer: 1000\n     *      })\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    updateValues(id, values, query) {\n        return this.put(`/items/${id}/values`, values, query);\n    }\n\n    /**\n     * Get a list of triggers\n     * This method will return a `Promise` so you can use\n     * `.then` and `.catch` methods.\n     *\n     * @param {number} id      - The item ID to get the triggers.\n     * @param {object} [query] - Optional request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * ingresse.ticket.getTriggers(10000040)\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    getTriggers(id, query = {}) {\n        return this.get(`/items/${id}/triggers`, query);\n    }\n\n    /**\n     * Get the tax calculated\n     *\n     * @param {Object} query - The request parameters.\n     * @param {Number} [query.producerId] - The producer id.\n     * @param {Number} [query.eventId] - The event id.\n     * @param {Number} [query.price] - The ticket's price in cents.\n     * @param {Number} [query.taxDistribution] - The tax payed by customer (in percent).\n     * @param {Number} [query.tax] - The custom tax in cents.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * var query = {\n     *  eventId: 123, // must be informed one eventId or producerId.\n     *  taxDistribution: 50\n     * };\n     *\n     * ingresse.ticket.getTax(query)\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    getTax(query = {}) {\n        return this.get('/tax', query);\n    }\n\n    /**\n     * Get the ticket passkeys list.\n     *\n     * @param {Object} query - The request parameters.\n     * @param {Number} query.eventId - The event id.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * var query = {\n     *  eventId: 123, // must be informed one eventId.\n     * };\n     *\n     * ingresse.ticket.getPasskeys(query)\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    getPasskeys(query = {}) {\n        return this.get('/passkeys', query);\n    }\n\n    /**\n     * Get the ticket passkeys by id.\n     *\n     * @param {number} id      - The passkey id.\n     * @param {Object} [query] - The request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * ingresse.ticket.getPasskeyById(id, query)\n     *     .then(function (response) {\n     *         console.log(response);\n     *     })\n     *     .catch(function (error) {\n     *         console.log(error);\n     *     });\n     */\n    getPasskeyById(id, query = {}) {\n        return this.get(`/passkeys/${id}`, query);\n    }\n\n    /**\n     * Create a new passkey\n     *\n     * @param {object} data         - Data to create a new passkey.\n     * @param {number} data.eventId - The event id.\n     * @param {string} data.passkey - The passkey.\n     * @param {date}   [data.start] - The date that this passkey will works.\n     * @param {date}   [data.finish]- The data that this passkey will stop works.\n     * @param {Object} [query]      - The request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     *ingresse.ticket.createPasskey({\n     *    \"eventId\": 26899,\n     *    \"passkey\": \"passkey\",\n     *    \"start\"  : \"2018-10-31 12:00:00\",\n     *    \"finish\" : \"2019-11-10 20:20:00\"\n     *})\n     *.then(function (response) {\n     *    console.log(response);\n     *})\n     *.catch(function (error) {\n     *    console.log(error);\n     *});\n     */\n    createPasskey(data, query = {}) {\n        return this.post('/passkeys', data,  query);\n    }\n\n    /**\n     * Delete a passkey\n     *\n     * @param {number} id      - The passkey id.\n     * @param {object} [data]  - Data to delete passkey.\n     * @param {Object} [query] - The request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     *ingresse.ticket.deletePasskey(123)\n     *.then(function (response) {\n     *    console.log(response);\n     *})\n     *.catch(function (error) {\n     *    console.log(error);\n     *});\n     */\n    deletePasskey(id, data = {}, query = {}) {\n        return this.delete(`/passkeys/${id}`, query, data);\n    }\n\n    /**\n     * Update a passkey\n     *\n     * @param {string|number} id    - The passkey id to update.\n     * @param {object} data         - Data to update a passkey.\n     * @param {number} data.eventId - The event id.\n     * @param {string} data.passkey - The passkey.\n     * @param {date}   [data.start] - The date that this passkey will works (can not be lower than current day).\n     * @param {date}   [data.finish]- The data that this passkey will stop works.\n     * @param {Object} [query]      - The request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * ingresse.ticket.updatePasskey(200, {\n     *    \"eventId\": 26899,\n     *    \"passkey\": \"passkey\",\n     *    \"start\"  : \"2018-10-31 12:00:00\",\n     *    \"finish\" : \"2019-11-10 20:20:00\"\n     *})\n     *.then(function (response) {\n     *    console.log(response);\n     *})\n     *.catch(function (error) {\n     *   console.log(error);\n     *});\n     */\n    updatePasskey(id, data = {}, query = {}) {\n        return this.put(`/passkeys/${id}`, data, query);\n    }\n\n    /**\n     * Associate a passkey to items\n     *\n     * @param {string|number} id    - The passkey id to update.\n     * @param {object} data         - Data to  a passkey.\n     * @param {array}  data.itemIds - An array with tickets id.\n     * @param {Object} [query]      - The request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * ingresse.ticket.associatePasskey(200, {itemIds: [1,2,3]})\n     *.then(function (response) {\n     *    console.log(response);\n     *})\n     *.catch(function (error) {\n     *   console.log(error);\n     *});\n     */\n    associatePasskey(id, data = {}, query = {}) {\n        return this.put(`/passkeys/${id}/items`, data, query);\n    }\n\n    /**\n     * Create many passkeys and associate it for many tickets.\n     *\n     * @param {number}         eventId        - The event id.\n     * @param {object}         data           - Data with associate rules\n     * @param {array[string]}  data.codes     - Array with passkeys strings.\n     * @param {array[integer]} [data.itemIds] - Array with tickets id.\n     * @param {date}           [data.start]   - The date that this passkey will works (can not be lower than current day).\n     * @param {date}           [data.finish]  - The data that this passkey will stop works.\n     * @param {integer}        [data.limit]   - The usage limit.\n     * @param {Object}         [query]        - The request parameters.\n     * @returns {Promise}\n     *\n     * @example\n     * ...\n     *\n     * ingresse.ticket.batchPasskeys(200, {\n     *    \"codes\"  : [\"passkey1\", \"passkey2\", \"passkey3\"],\n     *    \"itemIds\": [1,2,3],\n     *    \"limit\"  : 100,\n     *    \"start\"  : \"2018-10-31 12:00:00\",\n     *    \"finish\" : \"2019-11-10 20:20:00\"\n     * })\n     *.then(function (response) {\n     *    console.log(response);\n     *})\n     *.catch(function (error) {\n     *   console.log(error);\n     *});\n     */\n    batchPasskeys(eventId, data = {}, query = {}) {\n        return this.post(`/event/${eventId}/passkeys`, data, query);\n    }\n}\n\n",
    "static": true,
    "longname": "src/apis/ticket.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 82,
    "kind": "class",
    "name": "Ticket",
    "memberof": "src/apis/ticket.js",
    "static": true,
    "longname": "src/apis/ticket.js~Ticket",
    "access": null,
    "export": true,
    "importPath": "ingresse-sdk/src/apis/ticket.js",
    "importStyle": "{Ticket}",
    "description": "Ingresse Ticket's API\n\nAPI to get, create, update or remove tickets.",
    "examples": [
      "var Sdk = require('ingresse-sdk');\nvar ingresse = new Sdk();\n\n// You will have access to this API\n// after instantiate the Sdk.\nvar ticket = ingresse.ticket;"
    ],
    "lineNumber": 17,
    "interface": false,
    "extends": [
      "src/request/handler.js~RequestHandler"
    ]
  },
  {
    "__docId__": 83,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/apis/ticket.js~Ticket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/ticket.js~Ticket#constructor",
    "access": null,
    "description": "Ticket Api",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "custom",
        "description": "Initialize Ticket Api settings."
      }
    ]
  },
  {
    "__docId__": 84,
    "kind": "member",
    "name": "settings",
    "memberof": "src/apis/ticket.js~Ticket",
    "static": false,
    "longname": "src/apis/ticket.js~Ticket#settings",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "getTypes",
    "memberof": "src/apis/ticket.js~Ticket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/ticket.js~Ticket#getTypes",
    "access": null,
    "description": "Get a list of ticket types\nThis method will return a `Promise` so you can use\n`.then` and `.catch` methods.",
    "examples": [
      "...\n\ningresse.ticket.getTypes()\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "getItems",
    "memberof": "src/apis/ticket.js~Ticket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/ticket.js~Ticket#getItems",
    "access": null,
    "description": "Get a list of ticket items\nThis method will return a `Promise` so you can use\n`.then` and `.catch` methdos.",
    "examples": [
      "...\n\ningresse.ticket.getItems()\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "getItem",
    "memberof": "src/apis/ticket.js~Ticket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/ticket.js~Ticket#getItem",
    "access": null,
    "description": "Get item by ID",
    "examples": [
      "...\n\ningresse.ticket.getItem(200)\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 99,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The item ID to get."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "newItem",
    "memberof": "src/apis/ticket.js~Ticket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/ticket.js~Ticket#newItem",
    "access": null,
    "description": "Create new Ticket item",
    "examples": [
      "...\n\ningresse.ticket.newItem({ name: 'My Ticket Name' })\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 121,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Data to create a new ticket item."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 89,
    "kind": "method",
    "name": "updateItem",
    "memberof": "src/apis/ticket.js~Ticket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/ticket.js~Ticket#updateItem",
    "access": null,
    "description": "Update a ticket item",
    "examples": [
      "...\n\ningresse.ticket.updateItem(200, { name: 'My Updated Ticket Name' })\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 144,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The item ID to update."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Data to update item."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "removeItem",
    "memberof": "src/apis/ticket.js~Ticket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/ticket.js~Ticket#removeItem",
    "access": null,
    "description": "Remove a ticket item",
    "examples": [
      "...\n\ningresse.ticket.removeItem(200)\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 166,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The item ID to remove."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "newAttribute",
    "memberof": "src/apis/ticket.js~Ticket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/ticket.js~Ticket#newAttribute",
    "access": null,
    "description": "Create new ticket attribute",
    "examples": [
      "...\n\ningresse.ticket.newAttribute(200, { key: 'min', value: '1', type: 'integer' })\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 190,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "Promise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The item ID to create attribute."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "attribute",
        "description": "The attribute data."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "Promise"
    }
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "updateAttribute",
    "memberof": "src/apis/ticket.js~Ticket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/ticket.js~Ticket#updateAttribute",
    "access": null,
    "description": "Updated ticket attribute",
    "examples": [
      "...\n\ningresse.ticket.updateAttribute(200, { key: 'minimum', value: 5, type: 'integer' })\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 214,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "Promise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The item ID to update attribute."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "attribute",
        "description": "The attribute data."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "Promise"
    }
  },
  {
    "__docId__": 93,
    "kind": "method",
    "name": "newSalePeriod",
    "memberof": "src/apis/ticket.js~Ticket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/ticket.js~Ticket#newSalePeriod",
    "access": null,
    "description": "Create new sale period to ticket",
    "examples": [
      "...\n\ningresse.ticket.newSalePeriod({\n         appCategoryId: 1,\n         start: '2016-10-10 20:20:00',\n         finish: '2016-11-10 20:20:00',\n         available: 1\n     })\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 243,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "Promise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The item ID to create sale period."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "salePeriod",
        "description": "The sale period data."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "Promise"
    }
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "updateSalePeriod",
    "memberof": "src/apis/ticket.js~Ticket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/ticket.js~Ticket#updateSalePeriod",
    "access": null,
    "description": "Updated ticket sale period",
    "examples": [
      "...\n\ningresse.ticket.updateSalePeriod(200, {\n         appCategoryId: 1,\n         start: '2016-11-20 10:10:00',\n         finish: '2016-12-20 10:10:00',\n         available: 1\n     })\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 272,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "Promise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The item ID to update the sale period."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "salePeriod",
        "description": "The salePeriod data."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "Promise"
    }
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "newValues",
    "memberof": "src/apis/ticket.js~Ticket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/ticket.js~Ticket#newValues",
    "access": null,
    "description": "Create new values to ticket",
    "examples": [
      "...\n\ningresse.ticket.newValues({\n         price: 10000,\n         feeSale: 500,\n         feeProducer: 500\n     })\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 300,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "Promise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The item ID to create values."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "values",
        "description": "The values data."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "Promise"
    }
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "updateValues",
    "memberof": "src/apis/ticket.js~Ticket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/ticket.js~Ticket#updateValues",
    "access": null,
    "description": "Updated ticket values",
    "examples": [
      "...\n\ningresse.ticket.updateValues(200, {\n         price: 20000,\n         feeSale: 1000,\n         feeProducer: 1000\n     })\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 328,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "Promise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The item ID to update values."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "values",
        "description": "The values data."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "Promise"
    }
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "getTriggers",
    "memberof": "src/apis/ticket.js~Ticket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/ticket.js~Ticket#getTriggers",
    "access": null,
    "description": "Get a list of triggers\nThis method will return a `Promise` so you can use\n`.then` and `.catch` methods.",
    "examples": [
      "...\n\ningresse.ticket.getTriggers(10000040)\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 352,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The item ID to get the triggers."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "getTax",
    "memberof": "src/apis/ticket.js~Ticket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/ticket.js~Ticket#getTax",
    "access": null,
    "description": "Get the tax calculated",
    "examples": [
      "...\n\nvar query = {\n eventId: 123, // must be informed one eventId or producerId.\n taxDistribution: 50\n};\n\ningresse.ticket.getTax(query)\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 383,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "query",
        "description": "The request parameters."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "query.producerId",
        "description": "The producer id."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "query.eventId",
        "description": "The event id."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "query.price",
        "description": "The ticket's price in cents."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "query.taxDistribution",
        "description": "The tax payed by customer (in percent)."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "query.tax",
        "description": "The custom tax in cents."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "getPasskeys",
    "memberof": "src/apis/ticket.js~Ticket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/ticket.js~Ticket#getPasskeys",
    "access": null,
    "description": "Get the ticket passkeys list.",
    "examples": [
      "...\n\nvar query = {\n eventId: 123, // must be informed one eventId.\n};\n\ningresse.ticket.getPasskeys(query)\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 409,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "query",
        "description": "The request parameters."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "query.eventId",
        "description": "The event id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 100,
    "kind": "method",
    "name": "getPasskeyById",
    "memberof": "src/apis/ticket.js~Ticket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/ticket.js~Ticket#getPasskeyById",
    "access": null,
    "description": "Get the ticket passkeys by id.",
    "examples": [
      "...\n\ningresse.ticket.getPasskeyById(id, query)\n    .then(function (response) {\n        console.log(response);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });"
    ],
    "lineNumber": 431,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The passkey id."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "The request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 101,
    "kind": "method",
    "name": "createPasskey",
    "memberof": "src/apis/ticket.js~Ticket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/ticket.js~Ticket#createPasskey",
    "access": null,
    "description": "Create a new passkey",
    "examples": [
      "...\n\ningresse.ticket.createPasskey({\n   \"eventId\": 26899,\n   \"passkey\": \"passkey\",\n   \"start\"  : \"2018-10-31 12:00:00\",\n   \"finish\" : \"2019-11-10 20:20:00\"\n})\n.then(function (response) {\n   console.log(response);\n})\n.catch(function (error) {\n   console.log(error);\n});"
    ],
    "lineNumber": 462,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Data to create a new passkey."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "data.eventId",
        "description": "The event id."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "data.passkey",
        "description": "The passkey."
      },
      {
        "nullable": null,
        "types": [
          "date"
        ],
        "spread": false,
        "optional": true,
        "name": "data.start",
        "description": "The date that this passkey will works."
      },
      {
        "nullable": null,
        "types": [
          "date"
        ],
        "spread": false,
        "optional": true,
        "name": "data.finish",
        "description": "The data that this passkey will stop works."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "The request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "deletePasskey",
    "memberof": "src/apis/ticket.js~Ticket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/ticket.js~Ticket#deletePasskey",
    "access": null,
    "description": "Delete a passkey",
    "examples": [
      "...\n\ningresse.ticket.deletePasskey(123)\n.then(function (response) {\n   console.log(response);\n})\n.catch(function (error) {\n   console.log(error);\n});"
    ],
    "lineNumber": 485,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The passkey id."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "data",
        "description": "Data to delete passkey."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "The request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "updatePasskey",
    "memberof": "src/apis/ticket.js~Ticket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/ticket.js~Ticket#updatePasskey",
    "access": null,
    "description": "Update a passkey",
    "examples": [
      "...\n\ningresse.ticket.updatePasskey(200, {\n   \"eventId\": 26899,\n   \"passkey\": \"passkey\",\n   \"start\"  : \"2018-10-31 12:00:00\",\n   \"finish\" : \"2019-11-10 20:20:00\"\n})\n.then(function (response) {\n   console.log(response);\n})\n.catch(function (error) {\n  console.log(error);\n});"
    ],
    "lineNumber": 517,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The passkey id to update."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Data to update a passkey."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "data.eventId",
        "description": "The event id."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "data.passkey",
        "description": "The passkey."
      },
      {
        "nullable": null,
        "types": [
          "date"
        ],
        "spread": false,
        "optional": true,
        "name": "data.start",
        "description": "The date that this passkey will works (can not be lower than current day)."
      },
      {
        "nullable": null,
        "types": [
          "date"
        ],
        "spread": false,
        "optional": true,
        "name": "data.finish",
        "description": "The data that this passkey will stop works."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "The request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "associatePasskey",
    "memberof": "src/apis/ticket.js~Ticket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/ticket.js~Ticket#associatePasskey",
    "access": null,
    "description": "Associate a passkey to items",
    "examples": [
      "...\n\ningresse.ticket.associatePasskey(200, {itemIds: [1,2,3]})\n.then(function (response) {\n   console.log(response);\n})\n.catch(function (error) {\n  console.log(error);\n});"
    ],
    "lineNumber": 541,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The passkey id to update."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Data to  a passkey."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.itemIds",
        "description": "An array with tickets id."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "The request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 105,
    "kind": "method",
    "name": "batchPasskeys",
    "memberof": "src/apis/ticket.js~Ticket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/apis/ticket.js~Ticket#batchPasskeys",
    "access": null,
    "description": "Create many passkeys and associate it for many tickets.",
    "examples": [
      "...\n\ningresse.ticket.batchPasskeys(200, {\n   \"codes\"  : [\"passkey1\", \"passkey2\", \"passkey3\"],\n   \"itemIds\": [1,2,3],\n   \"limit\"  : 100,\n   \"start\"  : \"2018-10-31 12:00:00\",\n   \"finish\" : \"2019-11-10 20:20:00\"\n})\n.then(function (response) {\n   console.log(response);\n})\n.catch(function (error) {\n  console.log(error);\n});"
    ],
    "lineNumber": 575,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "The event id."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Data with associate rules"
      },
      {
        "nullable": null,
        "types": [
          "array[string]"
        ],
        "spread": false,
        "optional": false,
        "name": "data.codes",
        "description": "Array with passkeys strings."
      },
      {
        "nullable": null,
        "types": [
          "array[integer]"
        ],
        "spread": false,
        "optional": true,
        "name": "data.itemIds",
        "description": "Array with tickets id."
      },
      {
        "nullable": null,
        "types": [
          "date"
        ],
        "spread": false,
        "optional": true,
        "name": "data.start",
        "description": "The date that this passkey will works (can not be lower than current day)."
      },
      {
        "nullable": null,
        "types": [
          "date"
        ],
        "spread": false,
        "optional": true,
        "name": "data.finish",
        "description": "The data that this passkey will stop works."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": true,
        "name": "data.limit",
        "description": "The usage limit."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "The request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 106,
    "kind": "file",
    "name": "src/auth/authentication.js",
    "content": "/**\n * Base class for the authentications\n */\nexport class Authentication {\n    /**\n     * Set authentication data\n     *\n     * @param {object|string} data - Authentication data.\n     */\n    set authData(data) {\n        this._authData = data;\n    }\n\n    /**\n     * Get authentication data\n     *\n     * @returns {object|string}\n     */\n    get authData() {\n        return this._authData;\n    }\n}\n\n",
    "static": true,
    "longname": "src/auth/authentication.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 107,
    "kind": "class",
    "name": "Authentication",
    "memberof": "src/auth/authentication.js",
    "static": true,
    "longname": "src/auth/authentication.js~Authentication",
    "access": null,
    "export": true,
    "importPath": "ingresse-sdk/src/auth/authentication.js",
    "importStyle": "{Authentication}",
    "description": "Base class for the authentications",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 108,
    "kind": "set",
    "name": "authData",
    "memberof": "src/auth/authentication.js~Authentication",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/auth/authentication.js~Authentication#authData",
    "access": null,
    "description": "Set authentication data",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "object",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Authentication data."
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "member",
    "name": "_authData",
    "memberof": "src/auth/authentication.js~Authentication",
    "static": false,
    "longname": "src/auth/authentication.js~Authentication#_authData",
    "access": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 110,
    "kind": "get",
    "name": "authData",
    "memberof": "src/auth/authentication.js~Authentication",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/auth/authentication.js~Authentication#authData",
    "access": null,
    "description": "Get authentication data",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object|string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object",
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 111,
    "kind": "file",
    "name": "src/auth/index.js",
    "content": "import {Jwt} from './jwt';\nimport {Ingresse} from './ingresse';\n\n\nexport var auth = {\n    [Jwt.type()]: Jwt,\n    [Ingresse.type()]: Ingresse\n};\n\n",
    "static": true,
    "longname": "src/auth/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 112,
    "kind": "variable",
    "name": "auth",
    "memberof": "src/auth/index.js",
    "static": true,
    "longname": "src/auth/index.js~auth",
    "access": null,
    "export": true,
    "importPath": "ingresse-sdk/src/auth/index.js",
    "importStyle": "{auth}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"undefined\": *}"
      ]
    }
  },
  {
    "__docId__": 113,
    "kind": "file",
    "name": "src/auth/ingresse.js",
    "content": "import { Authentication } from './authentication';\n\nexport class Ingresse extends Authentication {\n    constructor() {\n        super();\n        this.authData = {};\n    }\n\n    /**\n     * Authentication type e.g. Jwt, BasicAuth, Ingresse\n     *\n     * @returns {string}\n     */\n    static type() {\n        return 'Ingresse';\n    }\n\n    /**\n     * Get formatted authentication settings\n     *\n     * @returns {object}\n     */\n    getSettings() {\n        return {\n            query: {\n                'apikey': encodeURI(this.getApiKey()),\n            }\n        };\n    }\n\n    /**\n     * Set Ingresse ApiKey\n     *\n     * @param {string} apiKey - Ingresse ApiKey\n     *\n     * @example\n     * ingresse.api.auth.setApiKey('12345678901234');\n     */\n    setApiKey(apiKey) {\n        this.authData.apiKey = apiKey;\n    }\n\n    /**\n     * @DEPRECATED\n     *\n     * Only compatibility purposes\n     */\n    setPublicKey(apiKey) {\n        this.setApiKey(apiKey);\n    }\n\n    /**\n     * Get Ingresse ApiKey\n     *\n     * @returns {string}\n     *\n     * @example\n     * ingresse.api.auth.getApiKey();\n     */\n    getApiKey() {\n        return this.authData.apiKey;\n    }\n\n    /**\n     * @DEPRECATED\n     *\n     * Only compatibility purposes\n     */\n    getPublicKey() {\n        return this.getApiKey();\n    }\n\n    /**\n     * @DEPRECATED\n     *\n     * Set Ingresse PrivateKey\n     *\n     * @param {string} privateKey - Ingresse PrivateKey\n     *\n     * @example\n     * ingresse.api.auth.setPrivateKey('12345678901234');\n     */\n    setPrivateKey(privateKey) {\n        this.authData.privateKey = privateKey;\n    }\n\n    /**\n     * @DEPRECATED\n     *\n     * Get Ingresse PrivateKey\n     *\n     * @returns {string}\n     *\n     * @example\n     * ingresse.api.auth.getPrivateKey();\n     */\n    getPrivateKey() {\n        return this.authData.privateKey;\n    }\n\n    /**\n     * Set Auth settings to 'Others Companies' validations\n     *\n     * @param {string} timestamp\n     * @param {string} signature\n     * @param {string} apiKey (optional)\n     *\n     * @example\n     * ingresse.api.auth.setAuth('2018-03-14T16:10:13Z', 'signature-generated-before', 'your-app-api-key--optional');\n     */\n    setAuth(timestamp, signature, apiKey) {\n        if (!timestamp || !signature) {\n            return false;\n        }\n\n        this.authData.timestamp = timestamp;\n        this.authData.signature = signature;\n        this.setApiKey(apiKey || this.getApiKey());\n\n        return true;\n    }\n}\n",
    "static": true,
    "longname": "src/auth/ingresse.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 114,
    "kind": "class",
    "name": "Ingresse",
    "memberof": "src/auth/ingresse.js",
    "static": true,
    "longname": "src/auth/ingresse.js~Ingresse",
    "access": null,
    "export": true,
    "importPath": "ingresse-sdk/src/auth/ingresse.js",
    "importStyle": "{Ingresse}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "src/auth/authentication.js~Authentication"
    ]
  },
  {
    "__docId__": 115,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/auth/ingresse.js~Ingresse",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/auth/ingresse.js~Ingresse#constructor",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 116,
    "kind": "member",
    "name": "authData",
    "memberof": "src/auth/ingresse.js~Ingresse",
    "static": false,
    "longname": "src/auth/ingresse.js~Ingresse#authData",
    "access": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 117,
    "kind": "method",
    "name": "type",
    "memberof": "src/auth/ingresse.js~Ingresse",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/auth/ingresse.js~Ingresse.type",
    "access": null,
    "description": "Authentication type e.g. Jwt, BasicAuth, Ingresse",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "getSettings",
    "memberof": "src/auth/ingresse.js~Ingresse",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/auth/ingresse.js~Ingresse#getSettings",
    "access": null,
    "description": "Get formatted authentication settings",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 119,
    "kind": "method",
    "name": "setApiKey",
    "memberof": "src/auth/ingresse.js~Ingresse",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/auth/ingresse.js~Ingresse#setApiKey",
    "access": null,
    "description": "Set Ingresse ApiKey",
    "examples": [
      "ingresse.api.auth.setApiKey('12345678901234');"
    ],
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "apiKey",
        "description": "Ingresse ApiKey"
      }
    ]
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "setPublicKey",
    "memberof": "src/auth/ingresse.js~Ingresse",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/auth/ingresse.js~Ingresse#setPublicKey",
    "access": null,
    "description": "",
    "lineNumber": 48,
    "unknown": [
      {
        "tagName": "@DEPRECATED",
        "tagValue": "\nOnly compatibility purposes"
      }
    ],
    "params": [
      {
        "name": "apiKey",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "getApiKey",
    "memberof": "src/auth/ingresse.js~Ingresse",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/auth/ingresse.js~Ingresse#getApiKey",
    "access": null,
    "description": "Get Ingresse ApiKey",
    "examples": [
      "ingresse.api.auth.getApiKey();"
    ],
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 122,
    "kind": "method",
    "name": "getPublicKey",
    "memberof": "src/auth/ingresse.js~Ingresse",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/auth/ingresse.js~Ingresse#getPublicKey",
    "access": null,
    "description": "",
    "lineNumber": 69,
    "unknown": [
      {
        "tagName": "@DEPRECATED",
        "tagValue": "\nOnly compatibility purposes"
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "setPrivateKey",
    "memberof": "src/auth/ingresse.js~Ingresse",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/auth/ingresse.js~Ingresse#setPrivateKey",
    "access": null,
    "description": "",
    "examples": [
      "ingresse.api.auth.setPrivateKey('12345678901234');"
    ],
    "lineNumber": 83,
    "unknown": [
      {
        "tagName": "@DEPRECATED",
        "tagValue": "\nSet Ingresse PrivateKey"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "privateKey",
        "description": "Ingresse PrivateKey"
      }
    ]
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "getPrivateKey",
    "memberof": "src/auth/ingresse.js~Ingresse",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/auth/ingresse.js~Ingresse#getPrivateKey",
    "access": null,
    "description": "",
    "examples": [
      "ingresse.api.auth.getPrivateKey();"
    ],
    "lineNumber": 97,
    "unknown": [
      {
        "tagName": "@DEPRECATED",
        "tagValue": "\nGet Ingresse PrivateKey"
      },
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 125,
    "kind": "method",
    "name": "setAuth",
    "memberof": "src/auth/ingresse.js~Ingresse",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/auth/ingresse.js~Ingresse#setAuth",
    "access": null,
    "description": "Set Auth settings to 'Others Companies' validations",
    "examples": [
      "ingresse.api.auth.setAuth('2018-03-14T16:10:13Z', 'signature-generated-before', 'your-app-api-key--optional');"
    ],
    "lineNumber": 111,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "timestamp",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "signature",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "apiKey",
        "description": "(optional)"
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 126,
    "kind": "file",
    "name": "src/auth/jwt.js",
    "content": "import {Authentication} from './authentication';\n\n\nexport class Jwt extends Authentication {\n    constructor() {\n        super();\n    }\n\n    /**\n     * Authentication type e.g. Jwt, BasicAuth\n     *\n     * @returns {string}\n     */\n    static type() {\n        return 'Jwt';\n    }\n\n    /**\n     * Get formatted authentication settings\n     *\n     * @returns {object}\n     */\n    getSettings() {\n        return {\n            headers: {\n                'Authorization': `Bearer ${this.getToken()}`\n            }\n        };\n    }\n\n    /**\n     * Set Jwt authentication token value\n     *\n     * @param {string} token - JWT Token value\n     *\n     * @example\n     * ingresse.ticket.auth.setToken('12345.67890.1234');\n     */\n    setToken(token) {\n        this.authData = token;\n    }\n\n    /**\n     * Get Jwt authentication token value\n     *\n     * @returns {string}\n     *\n     * @example\n     * ingresse.ticket.auth.getToken();\n     */\n    getToken() {\n        return this.authData;\n    }\n}\n\n",
    "static": true,
    "longname": "src/auth/jwt.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 127,
    "kind": "class",
    "name": "Jwt",
    "memberof": "src/auth/jwt.js",
    "static": true,
    "longname": "src/auth/jwt.js~Jwt",
    "access": null,
    "export": true,
    "importPath": "ingresse-sdk/src/auth/jwt.js",
    "importStyle": "{Jwt}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "src/auth/authentication.js~Authentication"
    ]
  },
  {
    "__docId__": 128,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/auth/jwt.js~Jwt",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/auth/jwt.js~Jwt#constructor",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 129,
    "kind": "method",
    "name": "type",
    "memberof": "src/auth/jwt.js~Jwt",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/auth/jwt.js~Jwt.type",
    "access": null,
    "description": "Authentication type e.g. Jwt, BasicAuth",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 130,
    "kind": "method",
    "name": "getSettings",
    "memberof": "src/auth/jwt.js~Jwt",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/auth/jwt.js~Jwt#getSettings",
    "access": null,
    "description": "Get formatted authentication settings",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 131,
    "kind": "method",
    "name": "setToken",
    "memberof": "src/auth/jwt.js~Jwt",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/auth/jwt.js~Jwt#setToken",
    "access": null,
    "description": "Set Jwt authentication token value",
    "examples": [
      "ingresse.ticket.auth.setToken('12345.67890.1234');"
    ],
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "token",
        "description": "JWT Token value"
      }
    ]
  },
  {
    "__docId__": 132,
    "kind": "member",
    "name": "authData",
    "memberof": "src/auth/jwt.js~Jwt",
    "static": false,
    "longname": "src/auth/jwt.js~Jwt#authData",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 133,
    "kind": "method",
    "name": "getToken",
    "memberof": "src/auth/jwt.js~Jwt",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/auth/jwt.js~Jwt#getToken",
    "access": null,
    "description": "Get Jwt authentication token value",
    "examples": [
      "ingresse.ticket.auth.getToken();"
    ],
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 134,
    "kind": "file",
    "name": "src/helper/cookie.js",
    "content": "/**\n * Cookie\n */\nexport class Cookie {\n\n    constructor(companyId) {\n        this.companyId = (companyId || 1);\n    }\n\n    /**\n     * Create the cookie.\n     *\n     * @param {string} cname - The cookie name.\n     * @param {string|number} cvalue - The cookie value.\n     * @param {number} days - The expiration days.\n     *\n     * @returns {String}\n     */\n    createCookie(cname, cvalue, days) {\n        let name = this.getCookie(cname);\n\n        if (name !== '') {\n            return name;\n        }\n\n        if (cname && cvalue && days) {\n            this._setCookie(cname, cvalue, days);\n\n            return this.getCookie(cname);\n        }\n\n        return '';\n    }\n\n    /**\n     * Delete the cookie.\n     * @param {string} cname - The cookie name.\n     */\n    deleteCookie(cname) {\n        let data = this.getCookie(cname);\n\n        if (data !== '') {\n            this._setCookie(cname, data, -1);\n        }\n    }\n\n    /**\n     * Check/Return the cookie if it's exists.\n     *\n     * @param {string} cname - The cookie name.\n     *\n     * @returns {String}\n     */\n    getCookie(cname) {\n        let data = this._getCookie(cname);\n\n        if (data) {\n            return data;\n        }\n\n        return '';\n    }\n\n    /**\n     * Concat cookie name\n     *\n     * @param {string} cname - Cookie name\n     *\n     * @return {string}\n     */\n    _concatName(cname) {\n        let cookieName = '';\n\n        return cookieName.concat(\n            'ing',\n            '_',\n            this.companyId,\n            '_',\n            (cname || '')\n        );\n    }\n\n    /**\n     * Set the cookie.\n     *\n     * @param {string} cname - The cookie name.\n     * @param {string|number} cvalue - The cookie value.\n     * @param {number} exdays - The expiration days.\n     */\n    _setCookie(cname, cvalue, exdays) {\n        let date = new Date();\n        date.setTime(date.getTime() + (exdays*24*60*60*1000));\n        let expires = 'expires=' + date.toUTCString();\n        let domain =\n            document.location.hostname.includes('.ingresse.com') ?\n                '.ingresse.com' : document.location.hostname;\n\n        document.cookie =\n            this._concatName(cname) + '=' + cvalue + ';' +\n            expires + ';' +\n            'domain=' + domain + ';' +\n            'path=/'\n        ;\n    }\n\n    /**\n     * Get the cookie.\n     *\n     * @param {string} cname - The cookie name.\n     *\n     * @returns {String}\n     */\n    _getCookie(cname) {\n        let name = (this._concatName(cname) + '=');\n        let decodedCookie = decodeURIComponent(document.cookie);\n        let scookie = decodedCookie.split(';');\n\n        for (let i = 0; i < scookie.length; i++) {\n            let c = scookie[i];\n\n            while (c.charAt(0) === ' ') {\n                c = c.substring(1);\n            }\n\n            if (c.indexOf(name) === 0) {\n                return c.substring(name.length, c.length);\n            }\n        }\n\n        return '';\n    }\n}\n\n",
    "static": true,
    "longname": "src/helper/cookie.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 135,
    "kind": "class",
    "name": "Cookie",
    "memberof": "src/helper/cookie.js",
    "static": true,
    "longname": "src/helper/cookie.js~Cookie",
    "access": null,
    "export": true,
    "importPath": "ingresse-sdk/src/helper/cookie.js",
    "importStyle": "{Cookie}",
    "description": "Cookie",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 136,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/helper/cookie.js~Cookie",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/helper/cookie.js~Cookie#constructor",
    "access": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "companyId",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 137,
    "kind": "member",
    "name": "companyId",
    "memberof": "src/helper/cookie.js~Cookie",
    "static": false,
    "longname": "src/helper/cookie.js~Cookie#companyId",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 138,
    "kind": "method",
    "name": "createCookie",
    "memberof": "src/helper/cookie.js~Cookie",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/helper/cookie.js~Cookie#createCookie",
    "access": null,
    "description": "Create the cookie.",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "cname",
        "description": "The cookie name."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "cvalue",
        "description": "The cookie value."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "days",
        "description": "The expiration days."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 139,
    "kind": "method",
    "name": "deleteCookie",
    "memberof": "src/helper/cookie.js~Cookie",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/helper/cookie.js~Cookie#deleteCookie",
    "access": null,
    "description": "Delete the cookie.",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "cname",
        "description": "The cookie name."
      }
    ]
  },
  {
    "__docId__": 140,
    "kind": "method",
    "name": "getCookie",
    "memberof": "src/helper/cookie.js~Cookie",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/helper/cookie.js~Cookie#getCookie",
    "access": null,
    "description": "Check/Return the cookie if it's exists.",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "cname",
        "description": "The cookie name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 141,
    "kind": "method",
    "name": "_concatName",
    "memberof": "src/helper/cookie.js~Cookie",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/helper/cookie.js~Cookie#_concatName",
    "access": null,
    "description": "Concat cookie name",
    "lineNumber": 71,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "cname",
        "description": "Cookie name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 142,
    "kind": "method",
    "name": "_setCookie",
    "memberof": "src/helper/cookie.js~Cookie",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/helper/cookie.js~Cookie#_setCookie",
    "access": null,
    "description": "Set the cookie.",
    "lineNumber": 90,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "cname",
        "description": "The cookie name."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "cvalue",
        "description": "The cookie value."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "exdays",
        "description": "The expiration days."
      }
    ]
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "_getCookie",
    "memberof": "src/helper/cookie.js~Cookie",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/helper/cookie.js~Cookie#_getCookie",
    "access": null,
    "description": "Get the cookie.",
    "lineNumber": 113,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "cname",
        "description": "The cookie name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 144,
    "kind": "file",
    "name": "src/helper/index.js",
    "content": "/**\n* Deep merge objeect\n*\n* @returns {object}\n*/\nexport var deepMerge = (target, source) => {\n    for (let key of Object.keys(source)) {\n        if (source[key] instanceof Object && !source[key].hasOwnProperty('length')) {\n            Object.assign(source[key], deepMerge(target[key] || {}, source[key]));\n        }\n    }\n\n    Object.assign(target || {}, source);\n\n    return target;\n};\n",
    "static": true,
    "longname": "src/helper/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 145,
    "kind": "function",
    "name": "deepMerge",
    "memberof": "src/helper/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/helper/index.js~deepMerge",
    "access": null,
    "export": true,
    "importPath": "ingresse-sdk/src/helper/index.js",
    "importStyle": "{deepMerge}",
    "description": "Deep merge objeect",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "params": [
      {
        "name": "target",
        "types": [
          "*"
        ]
      },
      {
        "name": "source",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 146,
    "kind": "file",
    "name": "src/helper/mixin.js",
    "content": "import 'babel-polyfill';\n\n// Class for creating multi inheritance.\nexport class Mixin {\n\n    // Inherit method to create base classes.\n    static inherit(..._bases) {\n        class classes {\n\n            // The base classes\n            get base() { return _bases; }\n\n            constructor(..._args) {\n                var index = 0;\n\n                for (let b of this.base)\n                {\n                    let obj = new b(_args[index++]);\n                    Mixin.copy(this, obj);\n                }\n            }\n\n        }\n\n        // Copy over properties and methods\n        for (let base of _bases) {\n            Mixin.copy(classes, base);\n            Mixin.copy(classes.prototype, base.prototype);\n        }\n\n        return classes;\n    }\n\n    // Copies the properties from one class to another\n    static copy(_target, _source) {\n        for (let key of Reflect.ownKeys(_source)) {\n            if (key !== 'constructor' && key !== 'prototype' && key !== 'name') {\n                let desc = Object.getOwnPropertyDescriptor(_source, key);\n                Object.defineProperty(_target, key, desc);\n            }\n        }\n    }\n}\n",
    "static": true,
    "longname": "src/helper/mixin.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 147,
    "kind": "class",
    "name": "Mixin",
    "memberof": "src/helper/mixin.js",
    "static": true,
    "longname": "src/helper/mixin.js~Mixin",
    "access": null,
    "export": true,
    "importPath": "ingresse-sdk/src/helper/mixin.js",
    "importStyle": "{Mixin}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false
  },
  {
    "__docId__": 148,
    "kind": "method",
    "name": "inherit",
    "memberof": "src/helper/mixin.js~Mixin",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/helper/mixin.js~Mixin.inherit",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "_bases",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 149,
    "kind": "method",
    "name": "copy",
    "memberof": "src/helper/mixin.js~Mixin",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/helper/mixin.js~Mixin.copy",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "_target",
        "types": [
          "*"
        ]
      },
      {
        "name": "_source",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 150,
    "kind": "file",
    "name": "src/ingresse-sdk.js",
    "content": "import {apis} from './apis';\nimport {version} from '../package.json';\n\n\n/**\n * Ingresse JavaScript SDK\n */\nclass IngresseSdk {\n    /**\n     * Instantiate the SDK\n     *\n     * @param {object} [settings] - SDK configuration settings\n     *\n     * @example\n     * ```\n     * var Sdk = require('ingresse-sdk');\n     *\n     * var ingresse = new Sdk({\n     *   companyId: 4,\n     *   ticket: {\n     *     url: 'http://hml.ticket.ingresse.com'\n     *   }\n     * });\n     * ```\n     */\n    constructor(settings = {}) {\n        this._init(settings);\n    }\n\n    /**\n     * Ingresse Sdk Version\n     *\n     * @returns {string}\n     */\n    static version() {\n        return version;\n    }\n\n    /**\n     * Initialize API's configurations\n     *\n     * @param {object} settings - SDK settings.\n     */\n    _init(settings = {}) {\n        let apiList = settings.apis || Object.keys(apis);\n        settings.companyId = (settings.companyId || 1);\n\n        apiList.map((key) => {\n            let Api = apis[key];\n\n            if (Api) {\n                let options = settings[key] || null;\n                this[key]   = new Api(Object.assign({ companyId: settings.companyId }, options));\n            }\n        });\n    }\n}\n\nmodule.exports = IngresseSdk\nmodule.exports.default = IngresseSdk\n\n",
    "static": true,
    "longname": "src/ingresse-sdk.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 151,
    "kind": "class",
    "name": "IngresseSdk",
    "memberof": "src/ingresse-sdk.js",
    "static": true,
    "longname": "src/ingresse-sdk.js~IngresseSdk",
    "access": null,
    "export": false,
    "importPath": "ingresse-sdk/src/ingresse-sdk.js",
    "importStyle": null,
    "description": "Ingresse JavaScript SDK",
    "lineNumber": 8,
    "interface": false
  },
  {
    "__docId__": 152,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/ingresse-sdk.js~IngresseSdk",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ingresse-sdk.js~IngresseSdk#constructor",
    "access": null,
    "description": "Instantiate the SDK",
    "examples": [
      "```\nvar Sdk = require('ingresse-sdk');\n\nvar ingresse = new Sdk({\n  companyId: 4,\n  ticket: {\n    url: 'http://hml.ticket.ingresse.com'\n  }\n});\n```"
    ],
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "settings",
        "description": "SDK configuration settings"
      }
    ]
  },
  {
    "__docId__": 153,
    "kind": "method",
    "name": "version",
    "memberof": "src/ingresse-sdk.js~IngresseSdk",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ingresse-sdk.js~IngresseSdk.version",
    "access": null,
    "description": "Ingresse Sdk Version",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 154,
    "kind": "method",
    "name": "_init",
    "memberof": "src/ingresse-sdk.js~IngresseSdk",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ingresse-sdk.js~IngresseSdk#_init",
    "access": null,
    "description": "Initialize API's configurations",
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "settings",
        "description": "SDK settings."
      }
    ]
  },
  {
    "__docId__": 155,
    "kind": "member",
    "name": "[key]",
    "memberof": "src/ingresse-sdk.js~IngresseSdk",
    "static": false,
    "longname": "src/ingresse-sdk.js~IngresseSdk#[key]",
    "access": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 156,
    "kind": "file",
    "name": "src/request/handler.js",
    "content": "import popsicle from 'popsicle';\nimport {plugins} from 'popsicle';\nimport {basePrefix, transformResponse} from './plugins';\nimport {auth} from '../auth';\nimport {deepMerge} from '../helper';\nimport status from 'popsicle-status';\n\n\n/**\n * Base request handler for all the API's\n * with `get`, `post`, `put` and `delete` methods\n */\nexport class RequestHandler {\n    /**\n     * Initialize request handler\n     *\n     * @param {object} settings - Settings\n     */\n    constructor(settings = {}) {\n        this.settings = settings;\n\n        if (auth[settings.auth]) {\n            this.auth = new auth[settings.auth]();\n        }\n    }\n\n    /**\n     * Set API url\n     *\n     * @param {string} url - Base URL, example: 'https://hml-api.ingresse.com'\n     *\n     * @example\n     * var sdk = require('ingresse-sdk');\n     * var ingresse = new Sdk();\n     *\n     * // You will have access to this API\n     * // after instantiate the Sdk.\n     * var api = ingresse.api;\n     *\n     * // Can set an specific URL to this API\n     * api.setUrl('https://hml-api.ingresse.com');\n     *\n     */\n    setUrl(url) {\n        this.settings.url = url;\n    }\n\n    /**\n     * Create new request promise\n     *\n     * @param {object} options - request options.\n     *\n     * @returns {Promise}\n     */\n    request(options = {}) {\n        let request = {};\n\n        request = deepMerge(request, options);\n\n        if (this.auth) {\n            request = deepMerge(request, this.auth.getSettings());\n        }\n\n        if (!this.settings.url) {\n            this.setUrl('https://api.ingresse.com/');\n        }\n\n        return popsicle(request)\n            .use(transformResponse())\n            .use(basePrefix(this.settings.url))\n            .use(plugins.parse(['json']));\n    }\n\n    /**\n     * Get resource\n     *\n     * @param {string} path    - Request get to endpoint e.g. /api-path/1\n     * @param {object} [query] - Optional request parameters.\n     *\n     * @returns {Promise}\n     */\n    get(path, query) {\n        let request = {\n            method: 'GET',\n            url   : path,\n            query : query,\n        };\n\n        return this.request(request);\n    }\n\n    /**\n     * Post resource\n     *\n     * @param {string} path    - Request post to endpoint e.g. /api-path\n     * @param {object} data    - Data to be posted.\n     * @param {object} [query] - Optional request parameters.\n     *\n     * @returns {Promise}\n     */\n    post(path, data, query) {\n        let request = {\n            method: 'POST',\n            url   : path,\n            body  : data,\n            query : query,\n        };\n\n        return this.request(request);\n    }\n\n    /**\n     * Put resource\n     *\n     * @param {string} path    - Request put to end endpoint e.g. /api-path/1\n     * @param {object} data    - Data to be updated.\n     * @param {object} [query] - Optional request parameters.\n     *\n     * @returns {Promise}\n     */\n    put(path, data, query) {\n        let request = {\n            method: 'PUT',\n            url   : path,\n            body  : data,\n            query : query,\n        };\n\n        return this.request(request);\n    }\n\n    /**\n     * Delete resource\n     *\n     * @param {string} path    - Request delete to endpoint e.g. /api-path/1\n     * @param {object} [query] - Optional request parameters.\n     * @param {object} [data]  - Data to be deleted.\n     *\n     * @returns {Promise}\n     */\n    delete(path, query, data) {\n        let request = {\n            method: 'DELETE',\n            url   : path,\n            body  : data,\n            query : query,\n        };\n\n        return this.request(request);\n    }\n}\n",
    "static": true,
    "longname": "src/request/handler.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 157,
    "kind": "class",
    "name": "RequestHandler",
    "memberof": "src/request/handler.js",
    "static": true,
    "longname": "src/request/handler.js~RequestHandler",
    "access": null,
    "export": true,
    "importPath": "ingresse-sdk/src/request/handler.js",
    "importStyle": "{RequestHandler}",
    "description": "Base request handler for all the API's\nwith `get`, `post`, `put` and `delete` methods",
    "lineNumber": 13,
    "interface": false
  },
  {
    "__docId__": 158,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/request/handler.js~RequestHandler",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request/handler.js~RequestHandler#constructor",
    "access": null,
    "description": "Initialize request handler",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "settings",
        "description": "Settings"
      }
    ]
  },
  {
    "__docId__": 159,
    "kind": "member",
    "name": "settings",
    "memberof": "src/request/handler.js~RequestHandler",
    "static": false,
    "longname": "src/request/handler.js~RequestHandler#settings",
    "access": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 160,
    "kind": "member",
    "name": "auth",
    "memberof": "src/request/handler.js~RequestHandler",
    "static": false,
    "longname": "src/request/handler.js~RequestHandler#auth",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 161,
    "kind": "method",
    "name": "setUrl",
    "memberof": "src/request/handler.js~RequestHandler",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request/handler.js~RequestHandler#setUrl",
    "access": null,
    "description": "Set API url",
    "examples": [
      "var sdk = require('ingresse-sdk');\nvar ingresse = new Sdk();\n\n// You will have access to this API\n// after instantiate the Sdk.\nvar api = ingresse.api;\n\n// Can set an specific URL to this API\napi.setUrl('https://hml-api.ingresse.com');"
    ],
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "Base URL, example: 'https://hml-api.ingresse.com'"
      }
    ]
  },
  {
    "__docId__": 162,
    "kind": "method",
    "name": "request",
    "memberof": "src/request/handler.js~RequestHandler",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request/handler.js~RequestHandler#request",
    "access": null,
    "description": "Create new request promise",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "request options."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 163,
    "kind": "method",
    "name": "get",
    "memberof": "src/request/handler.js~RequestHandler",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request/handler.js~RequestHandler#get",
    "access": null,
    "description": "Get resource",
    "lineNumber": 82,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "Request get to endpoint e.g. /api-path/1"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 164,
    "kind": "method",
    "name": "post",
    "memberof": "src/request/handler.js~RequestHandler",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request/handler.js~RequestHandler#post",
    "access": null,
    "description": "Post resource",
    "lineNumber": 101,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "Request post to endpoint e.g. /api-path"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Data to be posted."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 165,
    "kind": "method",
    "name": "put",
    "memberof": "src/request/handler.js~RequestHandler",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request/handler.js~RequestHandler#put",
    "access": null,
    "description": "Put resource",
    "lineNumber": 121,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "Request put to end endpoint e.g. /api-path/1"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Data to be updated."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 166,
    "kind": "method",
    "name": "delete",
    "memberof": "src/request/handler.js~RequestHandler",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request/handler.js~RequestHandler#delete",
    "access": null,
    "description": "Delete resource",
    "lineNumber": 141,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "Request delete to endpoint e.g. /api-path/1"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "Optional request parameters."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "data",
        "description": "Data to be deleted."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 167,
    "kind": "file",
    "name": "src/request/plugins.js",
    "content": "/**\n* Rquest middleware to format url with a base URL\n*\n* @params {string} base - Base URL for all requests.\n* @returns {function}\n*/\nexport var basePrefix = (base = '') => {\n    return (request, next) => {\n        let path = request.url.replace(/^\\//, '');\n        base = base.replace(/\\/$/, '');\n\n        request.url = `${base}/${path}`;\n\n        return next();\n    };\n};\n\n/**\n * Request middleware to handle response from api\n * and decide based on the status code if the\n * request was a success or an error\n *\n * @params {number} [lower=200]  - Lower status code number.\n * @params {number} [higher=299] - Higher status code number.\n * @returns {function}\n */\nexport var transformResponse = (lower = 200, higher = 299) => {\n    return (request, next) => {\n        return next().then((response) => {\n            if (response.status >= lower &&\n                response.status <= higher) {\n\n                return response.body;\n            }\n\n            var error = request.error('', 'EINVALIDSTATUS');\n            error.body = response.body;\n\n            throw error.body;\n        });\n    };\n};\n\n",
    "static": true,
    "longname": "src/request/plugins.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 168,
    "kind": "function",
    "name": "basePrefix",
    "memberof": "src/request/plugins.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/request/plugins.js~basePrefix",
    "access": null,
    "export": true,
    "importPath": "ingresse-sdk/src/request/plugins.js",
    "importStyle": "{basePrefix}",
    "description": "Rquest middleware to format url with a base URL",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@params",
        "tagValue": "{string} base - Base URL for all requests."
      },
      {
        "tagName": "@returns",
        "tagValue": "{function}"
      }
    ],
    "params": [
      {
        "name": "base",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "",
        "defaultValue": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 169,
    "kind": "function",
    "name": "transformResponse",
    "memberof": "src/request/plugins.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/request/plugins.js~transformResponse",
    "access": null,
    "export": true,
    "importPath": "ingresse-sdk/src/request/plugins.js",
    "importStyle": "{transformResponse}",
    "description": "Request middleware to handle response from api\nand decide based on the status code if the\nrequest was a success or an error",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@params",
        "tagValue": "{number} [lower=200]  - Lower status code number."
      },
      {
        "tagName": "@params",
        "tagValue": "{number} [higher=299] - Higher status code number."
      },
      {
        "tagName": "@returns",
        "tagValue": "{function}"
      }
    ],
    "params": [
      {
        "name": "lower",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 200,
        "defaultValue": "200"
      },
      {
        "name": "higher",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 299,
        "defaultValue": "299"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 171,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 172,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 173,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 174,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 175,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 176,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 177,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 178,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 179,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 180,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 181,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 182,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 183,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 184,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 185,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 186,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 187,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 188,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 189,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 190,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 191,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 192,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 193,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 194,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 195,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 196,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 197,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 198,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 199,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 200,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 201,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 202,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 203,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 204,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 205,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 206,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 207,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 208,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 209,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 210,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 211,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 212,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 213,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 214,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 215,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 216,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 217,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "lineNumber": 193,
    "builtinExternal": true
  },
  {
    "__docId__": 219,
    "kind": "external",
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 220,
    "kind": "external",
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 221,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 222,
    "kind": "external",
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 223,
    "kind": "external",
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 224,
    "kind": "external",
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 225,
    "kind": "external",
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 226,
    "kind": "external",
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "lineNumber": 34,
    "builtinExternal": true
  }
]